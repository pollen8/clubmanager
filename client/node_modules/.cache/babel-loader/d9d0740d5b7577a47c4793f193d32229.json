{"ast":null,"code":"import _objectSpread from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rob/personal/cra-test/src/Season/components/SeasonForm.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport DatePicker from 'react-date-picker';\nimport { IoIosAddCircle } from 'react-icons/io';\nimport { Button, CardBody, FormGroup, Input, Label, ModalFooter, SlidePanelBody } from '../../app/components/Layout';\nvar endDate = new Date();\nendDate.setFullYear(new Date().getFullYear() + 1);\nvar blank = {\n  startDate: new Date(),\n  endDate: endDate,\n  id: '',\n  visitorFee: 7\n};\nexport var SeasonForm = function SeasonForm(_ref) {\n  var addSeason = _ref.addSeason,\n      editSeason = _ref.editSeason,\n      initialData = _ref.initialData,\n      setSelected = _ref.setSelected;\n\n  var _useState = useState(blank),\n      _useState2 = _slicedToArray(_useState, 2),\n      season = _useState2[0],\n      setSeason = _useState2[1];\n\n  useEffect(function () {\n    if (initialData !== null) {\n      setSeason(initialData);\n    } else {\n      setSeason(blank);\n    }\n  }, [initialData]);\n  return React.createElement(SlidePanelBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Start date\"), React.createElement(DatePicker, {\n    value: season.startDate,\n    onChange: function onChange(v) {\n      var startDate = Array.isArray(v) ? v[0] : v;\n      setSeason(_objectSpread({}, season, {\n        startDate: startDate\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"End date\"), React.createElement(DatePicker, {\n    value: season.endDate,\n    onChange: function onChange(v) {\n      var endDate = Array.isArray(v) ? v[0] : v;\n      setSeason(_objectSpread({}, season, {\n        endDate: endDate\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"visitorFee\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Visitor fee\"), React.createElement(Input, {\n    name: \"visitorFee\",\n    id: \"visitorFee\",\n    value: String(season.visitorFee),\n    onChange: function onChange(e) {\n      return setSeason(_objectSpread({}, season, {\n        visitorFee: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, React.createElement(Button, {\n    outline: true,\n    onClick: function onClick() {\n      return setSelected(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, \"Clear\"), React.createElement(Button, {\n    onClick: function onClick() {\n      console.log('season', season);\n      season.id === '' ? addSeason(season) : editSeason(season);\n      setSeason(blank);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96\n    },\n    __self: this\n  }, React.createElement(IoIosAddCircle, {\n    size: \"1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104\n    },\n    __self: this\n  }), initialData === null ? 'Add' : 'Update')));\n};","map":{"version":3,"sources":["/home/rob/personal/cra-test/src/Season/components/SeasonForm.tsx"],"names":["React","useEffect","useState","DatePicker","IoIosAddCircle","Button","CardBody","FormGroup","Input","Label","ModalFooter","SlidePanelBody","endDate","Date","setFullYear","getFullYear","blank","startDate","id","visitorFee","SeasonForm","addSeason","editSeason","initialData","setSelected","season","setSeason","v","Array","isArray","String","e","target","value","console","log"],"mappings":"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","sourcesContent":["import React, {\n  FC,\n  useEffect,\n  useState,\n} from 'react';\nimport DatePicker from 'react-date-picker';\nimport { IoIosAddCircle } from 'react-icons/io';\n\nimport {\n  Button,\n  CardBody,\n  FormGroup,\n  Input,\n  Label,\n  ModalFooter,\n  SlidePanelBody,\n} from '../../app/components/Layout';\nimport { ISeason } from '../seasonState';\n\ninterface IProps {\n  addSeason(season: ISeason): void;\n  editSeason(season: ISeason): void;\n  initialData: null | ISeason;\n  setSelected: any;\n}\n\nconst endDate = new Date();\nendDate.setFullYear(new Date().getFullYear() + 1);\nconst blank: ISeason = {\n  startDate: new Date(),\n  endDate,\n  id: '',\n  visitorFee: 7,\n};\n\nexport const SeasonForm: FC<IProps> = ({ addSeason, editSeason, initialData, setSelected }) => {\n  const [season, setSeason] = useState<ISeason>(blank);\n\n  useEffect(() => {\n    if (initialData !== null) {\n      setSeason(initialData);\n    } else {\n      setSeason(blank);\n    }\n  }, [initialData]);\n  return (\n    <SlidePanelBody>\n      <CardBody>\n        <FormGroup>\n          <Label>Start date</Label>\n          <DatePicker\n            value={season.startDate}\n            onChange={(v) => {\n              const startDate = Array.isArray(v) ? v[0] : v;\n              setSeason({\n                ...season,\n                startDate,\n              })\n            }}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label>End date</Label>\n          <DatePicker\n            value={season.endDate}\n            onChange={(v) => {\n              const endDate = Array.isArray(v) ? v[0] : v;\n              setSeason({\n                ...season,\n                endDate,\n              })\n            }}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"visitorFee\">\n            Visitor fee\n        </Label>\n          <Input name=\"visitorFee\"\n            id=\"visitorFee\"\n            value={String(season.visitorFee)}\n            onChange={(e) => setSeason({\n              ...season,\n              visitorFee: e.target.value,\n            })} />\n        </FormGroup>\n\n      </CardBody>\n      <ModalFooter>\n        <Button\n          outline\n          onClick={() => setSelected(null)}>\n          Clear\n      </Button>\n\n        <Button\n          onClick={() => {\n            console.log('season', season);\n            season.id === ''\n              ? addSeason(season)\n              : editSeason(season)\n            setSeason(blank);\n          }}>\n          <IoIosAddCircle size=\"1rem\" />\n          {initialData === null ? 'Add' : 'Update'}\n        </Button>\n      </ModalFooter>\n    </SlidePanelBody>\n  )\n}"]},"metadata":{},"sourceType":"module"}