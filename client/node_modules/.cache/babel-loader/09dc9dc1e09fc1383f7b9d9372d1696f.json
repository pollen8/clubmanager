{"ast":null,"code":"import _slicedToArray from \"/home/rob/personal/clubmanager/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/rob/personal/clubmanager/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/rob/personal/clubmanager/client/src/Club/Club.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  filterClubs(searchString: \\\"\\\") {\\n    id,\\n    name,\\n    description,\\n  }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport React, { useState } from 'react';\nimport { useQuery } from 'react-apollo-hooks';\nimport { IoIosAddCircle } from 'react-icons/io';\nimport { useMedia } from 'use-media';\nimport { Grid } from '../app/components/Grid';\nimport { Button, Card, CardBody, Col, Content, Name, Row, sizes, SubHeading } from '../app/components/Layout';\nimport { SlidePanel } from '../app/components/SlidePanel'; // import { DeleteConfirmation } from '../Members/components/DeleteConfirmation';\n\nimport { ClubForm } from './components/ClubForm';\nexport var FILTER_CLUBS = gql(_templateObject());\nexport var Club = function Club() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      showForm = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var isWide = useMedia(\"(min-width: \".concat(sizes.desktop, \"px)\"));\n\n  var _useQuery = useQuery(FILTER_CLUBS),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Loading...\");\n  console.log('error', error);\n  console.log('data', data);\n  if (error || data === undefined) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  }, \"Error :(\");\n  var cards = data.filterClubs.map(function (club, index) {\n    return {\n      component: React.createElement(Card, {\n        style: {\n          display: 'flex',\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Col, {\n        flexGrow: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(Name, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, club.name), React.createElement(\"small\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 65\n        },\n        __self: this\n      }, club.description), React.createElement(Button, {\n        size: \"sm\",\n        onClick: function onClick() {\n          setSelected(club);\n          showForm(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }, \"Edit\"))))),\n      id: season.id,\n      index: index\n    };\n  });\n  return React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Col, {\n    flexGrow: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(SubHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, \"Clubs\")), React.createElement(Col, {\n    flexGrow: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    color: \"grey500\",\n    onClick: function onClick() {\n      return showForm(!visible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(IoIosAddCircle, {\n    size: \"1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }), \"Add\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    style: {\n      marginRight: '13rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    data: cards,\n    height: isWide ? 190 : 160,\n    columns: isWide ? 3 : 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  })), React.createElement(SlidePanel, {\n    visible: visible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107\n    },\n    __self: this\n  }, React.createElement(ClubForm, {\n    initialData: selected,\n    setSelected: setSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 108\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/home/rob/personal/clubmanager/client/src/Club/Club.tsx"],"names":["gql","React","useState","useQuery","IoIosAddCircle","useMedia","Grid","Button","Card","CardBody","Col","Content","Name","Row","sizes","SubHeading","SlidePanel","ClubForm","FILTER_CLUBS","Club","visible","showForm","selected","setSelected","isWide","desktop","data","error","loading","console","log","undefined","cards","filterClubs","map","club","index","component","display","position","name","description","id","season","marginRight"],"mappings":";;;;;;;;;;;;;;AAAA,OAAOA,GAAP,MAAgB,aAAhB;AACA,OAAOC,KAAP,IAEEC,QAFF,QAGO,OAHP;AAIA,SAASC,QAAT,QAAyB,oBAAzB;AACA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA,SAASC,IAAT,QAAqB,wBAArB;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,QAHF,EAIEC,GAJF,EAKEC,OALF,EAMEC,IANF,EAOEC,GAPF,EAQEC,KARF,EASEC,UATF,QAUO,0BAVP;AAWA,SAASC,UAAT,QAA2B,8BAA3B,C,CACA;;AACA,SAASC,QAAT,QAAyB,uBAAzB;AAYA,OAAO,IAAMC,YAAY,GAAGlB,GAAH,mBAAlB;AASP,OAAO,IAAMmB,IAAY,GAAG,SAAfA,IAAe,GAAM;AAAA,kBACJjB,QAAQ,CAAC,KAAD,CADJ;AAAA;AAAA,MACzBkB,OADyB;AAAA,MAChBC,QADgB;;AAAA,mBAEAnB,QAAQ,CAAe,IAAf,CAFR;AAAA;AAAA,MAEzBoB,QAFyB;AAAA,MAEfC,WAFe;;AAGhC,MAAMC,MAAM,GAAGnB,QAAQ,uBAAgBS,KAAK,CAACW,OAAtB,SAAvB;;AAHgC,kBAICtB,QAAQ,CAACe,YAAD,CAJT;AAAA,MAIxBQ,IAJwB,aAIxBA,IAJwB;AAAA,MAIlBC,KAJkB,aAIlBA,KAJkB;AAAA,MAIXC,OAJW,aAIXA,OAJW;;AAKhC,MAAIA,OAAJ,EAAa,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAP;AACbC,EAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBH,KAArB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EAAoBJ,IAApB;AACA,MAAIC,KAAK,IAAID,IAAI,KAAKK,SAAtB,EAAiC,OAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAP;AACjC,MAAMC,KAAK,GAAGN,IAAI,CAACO,WAAL,CACXC,GADW,CACP,UAACC,IAAD,EAAcC,KAAd;AAAA,WAAiC;AAEpCC,MAAAA,SAAS,EACP,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAEC,UAAAA,OAAO,EAAE,MAAX;AAAmBC,UAAAA,QAAQ,EAAE;AAA7B,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,GAAD;AAAK,QAAA,QAAQ,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGJ,IAAI,CAACK,IADR,CADF,EAIE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGL,IAAI,CAACM,WADR,CAJF,EAOE,oBAAC,MAAD;AACE,QAAA,IAAI,EAAC,IADP;AAEE,QAAA,OAAO,EAAE,mBAAM;AACblB,UAAAA,WAAW,CAACY,IAAD,CAAX;AACAd,UAAAA,QAAQ,CAAC,IAAD,CAAR;AACD,SALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAPF,CADF,CADF,CADF,CAHkC;AA2BpCqB,MAAAA,EAAE,EAAEC,MAAM,CAACD,EA3ByB;AA4BpCN,MAAAA,KAAK,EAALA;AA5BoC,KAAjC;AAAA,GADO,CAAd;AA+BA,SAAQ,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACN,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,CADF,EAIE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAMf,QAAQ,CAAC,CAACD,OAAF,CAAd;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,QADF,CAJF,CADM,EAcN,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,KAAK,EAAE;AAAEwB,MAAAA,WAAW,EAAE;AAAf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAEZ,KADR;AAEE,IAAA,MAAM,EAAER,MAAM,GAAG,GAAH,GAAS,GAFzB;AAGE,IAAA,OAAO,EAAEA,MAAM,GAAG,CAAH,GAAO,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAQE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEJ,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,QAAD;AACE,IAAA,WAAW,EAAEE,QADf;AAEE,IAAA,WAAW,EAAEC,WAFf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CAdM,CAAR;AA+BD,CAvEM","sourcesContent":["import gql from 'graphql-tag';\nimport React, {\n  FC,\n  useState,\n} from 'react';\nimport { useQuery } from 'react-apollo-hooks';\nimport { IoIosAddCircle } from 'react-icons/io';\nimport { useMedia } from 'use-media';\n\nimport { Grid } from '../app/components/Grid';\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Content,\n  Name,\n  Row,\n  sizes,\n  SubHeading,\n} from '../app/components/Layout';\nimport { SlidePanel } from '../app/components/SlidePanel';\n// import { DeleteConfirmation } from '../Members/components/DeleteConfirmation';\nimport { ClubForm } from './components/ClubForm';\n\nexport interface IClub {\n  name: string;\n  id: string;\n  description?: string;\n}\n\nexport interface ISearch {\n  name: string;\n}\n\nexport const FILTER_CLUBS = gql`\n{\n  filterClubs(searchString: \"\") {\n    id,\n    name,\n    description,\n  }\n}`;\n\nexport const Club: FC<{}> = () => {\n  const [visible, showForm] = useState(false);\n  const [selected, setSelected] = useState<IClub | null>(null);\n  const isWide = useMedia(`(min-width: ${sizes.desktop}px)`);\n  const { data, error, loading } = useQuery(FILTER_CLUBS);\n  if (loading) return <p>Loading...</p>;\n  console.log('error', error);\n  console.log('data', data);\n  if (error || data === undefined) return <p>Error :(</p>;\n  const cards = data.filterClubs\n    .map((club: IClub, index: number) => ({\n\n      component: (\n        <Card style={{ display: 'flex', position: 'relative' }}>\n          <CardBody>\n            <Row>\n              <Col flexGrow={1}>\n                <Name>\n                  {club.name}\n                </Name>\n                <small>\n                  {club.description}\n                </small>\n                <Button\n                  size=\"sm\"\n                  onClick={() => {\n                    setSelected(club);\n                    showForm(true);\n                  }}>\n                  Edit\n                </Button>\n              </Col>\n            </Row>\n          </CardBody>\n        </Card>\n\n      ),\n      id: season.id,\n      index,\n    }))\n  return (<Content>\n    <Row>\n      <Col flexGrow={2}>\n        <SubHeading>Clubs</SubHeading>\n      </Col>\n      <Col flexGrow={0}>\n        <Button size=\"sm\"\n          color=\"grey500\"\n          onClick={() => showForm(!visible)}>\n          <IoIosAddCircle size=\"1rem\" />\n          Add\n        </Button>\n      </Col>\n    </Row>\n    <Row>\n\n      <Col md={12} style={{ marginRight: '13rem' }}>\n        <Grid\n          data={cards}\n          height={isWide ? 190 : 160}\n          columns={isWide ? 3 : 1} />\n      </Col>\n      <SlidePanel visible={visible}>\n        <ClubForm\n          initialData={selected}\n          setSelected={setSelected}\n        />\n      </SlidePanel>\n    </Row>\n  </Content>\n  );\n}"]},"metadata":{},"sourceType":"module"}