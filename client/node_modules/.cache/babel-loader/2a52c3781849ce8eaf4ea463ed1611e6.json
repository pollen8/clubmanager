{"ast":null,"code":"import _slicedToArray from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rob/personal/cra-test/src/Season/Season.tsx\";\nimport React, { useState } from 'react';\nimport { IoIosAddCircle } from 'react-icons/io';\nimport { useMedia } from 'use-media';\nimport { Grid } from '../app/components/Grid';\nimport { Button, Col, Content, Row, sizes, SubHeading } from '../app/components/Layout';\nimport { SlidePanel } from '../app/components/SlidePanel'; // import { DeleteConfirmation } from '../Members/components/DeleteConfirmation';\n// import { SeasonForm } from './components/SeasonForm';\n\nexport var Season = function Season() {\n  // const { seasons, addSeason, editSeason, deleteSeason } = seasonState();\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      showForm = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var isWide = useMedia(\"(min-width: \".concat(sizes.desktop, \"px)\"));\n  var cards = []; // const cards = seasons\n  //   .map((season, index) => ({\n  //     component: (\n  //       <Card style={{ display: 'flex', position: 'relative' }}>\n  //         <CardBody>\n  //           <Row>\n  //             <Col flexGrow={1}>\n  //               <Name>\n  //                 {season.startDate.toLocaleDateString()} -\n  //                 {season.endDate.toLocaleDateString()}\n  //               </Name>\n  //               <strong>&pound;{season.visitorFee}</strong> visitor fee\n  //               {/* <DeleteConfirmation onDelete={() => deleteSeason(season.id)} /> */}\n  //               <Button\n  //                 size=\"sm\"\n  //                 onClick={() => {\n  //                   setSelected(season);\n  //                   showForm(true);\n  //                 }}>\n  //                 Edit\n  //               </Button>\n  //             </Col>\n  //           </Row>\n  //         </CardBody>\n  //       </Card>\n  //     ),\n  //     id: season.id,\n  //     index,\n  //   }))\n\n  return React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, React.createElement(Col, {\n    flexGrow: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(SubHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, \"Seasons\")), React.createElement(Col, {\n    flexGrow: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    color: \"grey500\",\n    onClick: function onClick() {\n      return showForm(!visible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(IoIosAddCircle, {\n    size: \"1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78\n    },\n    __self: this\n  }), \"Add\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    style: {\n      marginRight: '13rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    data: cards,\n    height: isWide ? 190 : 160,\n    columns: isWide ? 3 : 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  })), React.createElement(SlidePanel, {\n    visible: visible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/home/rob/personal/cra-test/src/Season/Season.tsx"],"names":["React","useState","IoIosAddCircle","useMedia","Grid","Button","Col","Content","Row","sizes","SubHeading","SlidePanel","Season","visible","showForm","selected","setSelected","isWide","desktop","cards","marginRight"],"mappings":";;AAAA,OAAOA,KAAP,IAEEC,QAFF,QAGO,OAHP;AAIA,SAASC,cAAT,QAA+B,gBAA/B;AACA,SAASC,QAAT,QAAyB,WAAzB;AAEA,SAASC,IAAT,QAAqB,wBAArB;AACA,SACEC,MADF,EAIEC,GAJF,EAKEC,OALF,EAOEC,GAPF,EAQEC,KARF,EASEC,UATF,QAUO,0BAVP;AAWA,SAASC,UAAT,QAA2B,8BAA3B,C,CACA;AACA;;AAOA,OAAO,IAAMC,MAAc,GAAG,SAAjBA,MAAiB,GAAM;AAClC;AADkC,kBAENX,QAAQ,CAAC,KAAD,CAFF;AAAA;AAAA,MAE3BY,OAF2B;AAAA,MAElBC,QAFkB;;AAAA,mBAGFb,QAAQ,CAAiB,IAAjB,CAHN;AAAA;AAAA,MAG3Bc,QAH2B;AAAA,MAGjBC,WAHiB;;AAIlC,MAAMC,MAAM,GAAGd,QAAQ,uBAAgBM,KAAK,CAACS,OAAtB,SAAvB;AACA,MAAMC,KAAY,GAAG,EAArB,CALkC,CAMlC;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;;AAEA,SACE,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF,EAIE,oBAAC,GAAD;AAAK,IAAA,QAAQ,EAAE,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,IAAb;AACE,IAAA,KAAK,EAAC,SADR;AAEE,IAAA,OAAO,EAAE;AAAA,aAAML,QAAQ,CAAC,CAACD,OAAF,CAAd;AAAA,KAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAGE,oBAAC,cAAD;AAAgB,IAAA,IAAI,EAAC,MAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,QADF,CAJF,CADF,EAcE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAa,IAAA,KAAK,EAAE;AAAEO,MAAAA,WAAW,EAAE;AAAf,KAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AACE,IAAA,IAAI,EAAED,KADR;AAEE,IAAA,MAAM,EAAEF,MAAM,GAAG,GAAH,GAAS,GAFzB;AAGE,IAAA,OAAO,EAAEA,MAAM,GAAG,CAAH,GAAO,CAHxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAFF,EAQE,oBAAC,UAAD;AAAY,IAAA,OAAO,EAAEJ,OAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IARF,CAdF,CADF;AAmCD,CA1EM","sourcesContent":["import React, {\n  FC,\n  useState,\n} from 'react';\nimport { IoIosAddCircle } from 'react-icons/io';\nimport { useMedia } from 'use-media';\n\nimport { Grid } from '../app/components/Grid';\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Content,\n  Name,\n  Row,\n  sizes,\n  SubHeading,\n} from '../app/components/Layout';\nimport { SlidePanel } from '../app/components/SlidePanel';\n// import { DeleteConfirmation } from '../Members/components/DeleteConfirmation';\n// import { SeasonForm } from './components/SeasonForm';\nimport { ISeason } from './seasonState';\n\nexport interface ISearch {\n  name: string;\n}\n\nexport const Season: FC<{}> = () => {\n  // const { seasons, addSeason, editSeason, deleteSeason } = seasonState();\n  const [visible, showForm] = useState(false);\n  const [selected, setSelected] = useState<ISeason | null>(null);\n  const isWide = useMedia(`(min-width: ${sizes.desktop}px)`);\n  const cards: any[] = [];\n  // const cards = seasons\n  //   .map((season, index) => ({\n\n  //     component: (\n  //       <Card style={{ display: 'flex', position: 'relative' }}>\n  //         <CardBody>\n  //           <Row>\n  //             <Col flexGrow={1}>\n  //               <Name>\n  //                 {season.startDate.toLocaleDateString()} -\n  //                 {season.endDate.toLocaleDateString()}\n\n  //               </Name>\n  //               <strong>&pound;{season.visitorFee}</strong> visitor fee\n  //               {/* <DeleteConfirmation onDelete={() => deleteSeason(season.id)} /> */}\n  //               <Button\n  //                 size=\"sm\"\n  //                 onClick={() => {\n  //                   setSelected(season);\n  //                   showForm(true);\n  //                 }}>\n  //                 Edit\n  //               </Button>\n  //             </Col>\n  //           </Row>\n  //         </CardBody>\n  //       </Card>\n\n  //     ),\n  //     id: season.id,\n  //     index,\n  //   }))\n\n  return (\n    <Content>\n      <Row>\n        <Col flexGrow={2}>\n          <SubHeading>Seasons</SubHeading>\n        </Col>\n        <Col flexGrow={0}>\n          <Button size=\"sm\"\n            color=\"grey500\"\n            onClick={() => showForm(!visible)}>\n            <IoIosAddCircle size=\"1rem\" />\n            Add\n          </Button>\n        </Col>\n      </Row>\n      <Row>\n\n        <Col md={12} style={{ marginRight: '13rem' }}>\n          <Grid\n            data={cards}\n            height={isWide ? 190 : 160}\n            columns={isWide ? 3 : 1} />\n        </Col>\n        <SlidePanel visible={visible}>\n          {/* <SeasonForm\n            addSeason={addSeason}\n            editSeason={editSeason}\n            initialData={selected}\n            setSelected={setSelected}\n          /> */}\n        </SlidePanel>\n\n      </Row>\n    </Content>\n  );\n}"]},"metadata":{},"sourceType":"module"}