{"ast":null,"code":"import _slicedToArray from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rob/personal/cra-test/src/Members/components/AddMemberForm.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport { IoIosAddCircle } from 'react-icons/io';\nimport { Button, CardBody, FormGroup, Input, Label, ModalFooter, SlidePanelBody } from '../../app/components/Layout';\nexport var AddMemberForm = function AddMemberForm(_ref) {\n  var addMember = _ref.addMember,\n      editMember = _ref.editMember,\n      initialData = _ref.initialData,\n      setSelected = _ref.setSelected;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      name = _useState2[0],\n      setName = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      id = _useState4[0],\n      setId = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      membership = _useState6[0],\n      setMembership = _useState6[1]; // Similar to componentDidMount and componentDidUpdate:\n\n\n  useEffect(function () {\n    if (initialData !== null) {\n      setName(initialData.name);\n      setMembership(initialData.membership);\n      setId(initialData.id);\n    } else {\n      setName('');\n      setMembership('guest');\n      setId('');\n    }\n  }, [initialData]);\n  return React.createElement(SlidePanelBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"gameName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    name: \"name\",\n    id: \"gameName\",\n    value: name,\n    onChange: function onChange(e) {\n      return setName(e.target.value);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    checked: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"membership\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"Is a member?\"), React.createElement(Input, {\n    type: \"checkbox\",\n    id: \"membership\",\n    checked: membership === 'member',\n    onChange: function onChange(e) {\n      return setMembership(e.target.checked ? 'member' : 'guest');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69\n    },\n    __self: this\n  }, React.createElement(Button, {\n    outline: true,\n    onClick: function onClick() {\n      return setSelected(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70\n    },\n    __self: this\n  }, \"Clear\"), React.createElement(Button, {\n    onClick: function onClick() {\n      id === '' ? addMember({\n        season: [],\n        name: name,\n        membership: membership,\n        id: id\n      }) : editMember({\n        season: [],\n        name: name,\n        membership: membership,\n        id: id\n      });\n      setName('');\n      setMembership('guest');\n      setId('');\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(IoIosAddCircle, {\n    size: \"1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), initialData === null ? 'Add' : 'Update')));\n};","map":{"version":3,"sources":["/home/rob/personal/cra-test/src/Members/components/AddMemberForm.tsx"],"names":["React","useEffect","useState","IoIosAddCircle","Button","CardBody","FormGroup","Input","Label","ModalFooter","SlidePanelBody","AddMemberForm","addMember","editMember","initialData","setSelected","name","setName","id","setId","membership","setMembership","e","target","value","checked","season"],"mappings":"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","sourcesContent":["import React, {\n  FC,\n  useEffect,\n  useState,\n} from 'react';\nimport { IoIosAddCircle } from 'react-icons/io';\n\nimport {\n  Button,\n  CardBody,\n  FormGroup,\n  Input,\n  Label,\n  ModalFooter,\n  SlidePanelBody,\n} from '../../app/components/Layout';\nimport {\n  IMember,\n  IMembershipType,\n} from '../memberState';\n\ninterface IProps {\n  addMember: (game: IMember) => void;\n  editMember: (game: IMember) => void;\n  initialData: null | IMember;\n  setSelected: any;\n}\nexport const AddMemberForm: FC<IProps & React.HTMLAttributes<HTMLDivElement>>\n  = ({ addMember, editMember, initialData, setSelected }) => {\n    const [name, setName] = useState('');\n    const [id, setId] = useState('');\n    const [membership, setMembership] = useState<IMembershipType>('');\n\n    // Similar to componentDidMount and componentDidUpdate:\n    useEffect(() => {\n      if (initialData !== null) {\n        setName(initialData.name);\n        setMembership(initialData.membership);\n        setId(initialData.id);\n      } else {\n        setName('');\n        setMembership('guest');\n        setId('');\n      }\n    }, [initialData]);\n    return (\n      <SlidePanelBody>\n        <CardBody>\n          <FormGroup>\n            <Label htmlFor=\"gameName\">\n              Name\n            </Label>\n            <Input name=\"name\" id=\"gameName\"\n              value={name}\n              onChange={(e) => setName(e.target.value)} />\n          </FormGroup>\n          <FormGroup\n            checked>\n            <Label htmlFor=\"membership\">\n              Is a member?\n          </Label>\n            <Input type=\"checkbox\"\n              id=\"membership\"\n              checked={membership === 'member'}\n              onChange={(e) => setMembership(e.target.checked ? 'member' : 'guest')} />\n\n          </FormGroup>\n        </CardBody>\n        <ModalFooter>\n          <Button\n            outline\n            onClick={() => setSelected(null)}>\n            Clear\n          </Button>\n\n          <Button\n            onClick={() => {\n              id === ''\n                ? addMember({ season: [], name, membership, id })\n                : editMember({ season: [], name, membership, id })\n              setName('');\n              setMembership('guest');\n              setId('');\n            }}>\n            <IoIosAddCircle size=\"1rem\" />\n            {initialData === null ? 'Add' : 'Update'}\n          </Button>\n        </ModalFooter>\n      </SlidePanelBody>\n    );\n  }"]},"metadata":{},"sourceType":"module"}