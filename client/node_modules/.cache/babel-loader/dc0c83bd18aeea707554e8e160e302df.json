{"ast":null,"code":"import _objectSpread from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/rob/personal/cra-test/src/app/components/Header.tsx\";\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  object-fit: cover;\\n  border-radius: 50%;\\n  display: block;\\n  margin-right: 1rem;\\n  height: \", \"px;\\n  width: \", \"px;\\n  cursor: pointer;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  margin: 1.5rem 1.5rem 1.5rem 0;\\n  font-size: 1.5rem;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { Fragment, useContext, useRef } from 'react';\nimport { Manager, Popper, Reference } from 'react-popper';\nimport styled from 'styled-components';\nimport { AuthContext } from '../../Routes';\nimport { useDropdown } from '../hooks/dropdown';\nimport { loadProfile } from '../hooks/loadProfile';\nimport { Button, Card, CardBody, Col, Container, Row } from './Layout';\nimport { Menu } from './Menu';\nvar Title = styled.h1(_templateObject());\nvar CircleImg = styled.img(_templateObject2(), function (props) {\n  return props.height || 100;\n}, function (props) {\n  return props.width || 100;\n});\nexport var Header = function Header() {\n  var circleRef = useRef(null);\n  var auth = useContext(AuthContext);\n\n  var _useDropdown = useDropdown(circleRef),\n      _useDropdown2 = _slicedToArray(_useDropdown, 2),\n      dropdownVisible = _useDropdown2[0],\n      setDropdownVisible = _useDropdown2[1];\n\n  var profile = loadProfile(auth);\n  console.log('profile'.profile);\n  return React.createElement(AuthContext.Consumer, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, function (auth) {\n    var isAuthenticated = auth.isAuthenticated,\n        login = auth.login,\n        logout = auth.logout;\n    return React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53\n      },\n      __self: this\n    }, React.createElement(Row, {\n      style: {\n        alignItems: 'center'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54\n      },\n      __self: this\n    }, React.createElement(Col, {\n      flexGrow: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }, React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, \"Club Manager\")), React.createElement(Col, {\n      flexGrow: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }, React.createElement(Menu, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    })), !isAuthenticated() && React.createElement(Button, {\n      onClick: function onClick() {\n        return login();\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }, \"Log In\"), isAuthenticated() && React.createElement(Fragment, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      ref: circleRef,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Manager, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(Reference, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, function (_ref) {\n      var ref = _ref.ref;\n      return React.createElement(CircleImg, {\n        onClick: function onClick() {\n          return setDropdownVisible(!dropdownVisible);\n        },\n        width: 40,\n        height: 40,\n        ref: ref,\n        src: profile.picture,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 77\n        },\n        __self: this\n      });\n    }), React.createElement(Popper, {\n      placement: \"bottom-end\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, function (_ref2) {\n      var ref = _ref2.ref,\n          style = _ref2.style,\n          placement = _ref2.placement,\n          arrowProps = _ref2.arrowProps;\n      return React.createElement(Card, {\n        ref: ref,\n        style: _objectSpread({}, style, {\n          left: '-120px',\n          opacity: 1,\n          display: dropdownVisible ? 'block' : 'none'\n        }),\n        \"data-placement\": placement,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 88\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 96\n        },\n        __self: this\n      }, React.createElement(\"div\", {\n        ref: arrowProps.ref,\n        style: arrowProps.style,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 97\n        },\n        __self: this\n      }), React.createElement(Button, {\n        onClick: function onClick() {\n          return logout();\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 98\n        },\n        __self: this\n      }, \"Log Out\")));\n    }))))));\n  });\n};","map":{"version":3,"sources":["/home/rob/personal/cra-test/src/app/components/Header.tsx"],"names":["React","Fragment","useContext","useRef","Manager","Popper","Reference","styled","AuthContext","useDropdown","loadProfile","Button","Card","CardBody","Col","Container","Row","Menu","Title","h1","CircleImg","img","props","height","width","Header","circleRef","auth","dropdownVisible","setDropdownVisible","profile","console","log","isAuthenticated","login","logout","alignItems","ref","picture","style","placement","arrowProps","left","opacity","display"],"mappings":"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","sourcesContent":["import React, {\n  FC,\n  Fragment,\n  useContext,\n  useRef,\n} from 'react';\nimport {\n  Manager,\n  Popper,\n  Reference,\n} from 'react-popper';\nimport styled from 'styled-components';\n\nimport { AuthContext } from '../../Routes';\nimport { useDropdown } from '../hooks/dropdown';\nimport { loadProfile } from '../hooks/loadProfile';\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Container,\n  Row,\n} from './Layout';\nimport { Menu } from './Menu';\n\nconst Title = styled.h1`\n  margin: 1.5rem 1.5rem 1.5rem 0;\n  font-size: 1.5rem;\n`;\n\nconst CircleImg = styled.img<{ width?: number, height?: number }>`\n  object-fit: cover;\n  border-radius: 50%;\n  display: block;\n  margin-right: 1rem;\n  height: ${(props) => props.height || 100}px;\n  width: ${(props) => props.width || 100}px;\n  cursor: pointer;\n`;\n\nexport const Header: FC<{}> = () => {\n  const circleRef = useRef(null);\n  const auth = useContext(AuthContext);\n  const [dropdownVisible, setDropdownVisible] = useDropdown(circleRef);\n  const profile = loadProfile(auth);\n  console.log('profile'.profile);\n  return (\n    <AuthContext.Consumer>\n      {\n        (auth) => {\n          const { isAuthenticated, login, logout } = auth;\n          return <Container>\n            <Row style={{ alignItems: 'center' }}>\n              <Col flexGrow={0}>\n                <Title>Club Manager</Title>\n              </Col>\n              <Col flexGrow={2}>\n                <Menu />\n              </Col>\n              {\n                !isAuthenticated() && (\n                  <Button\n                    onClick={() => login()}\n                  >\n                    Log In\n        </Button>\n                )\n              }\n              {\n                isAuthenticated() && (\n                  <Fragment>\n                    <div ref={circleRef}>\n                      <Manager>\n                        <Reference>\n                          {({ ref }) => (\n                            <CircleImg\n                              onClick={() => setDropdownVisible(!dropdownVisible)}\n                              width={40}\n                              height={40}\n                              ref={ref}\n                              src={profile.picture} />\n                          )}\n                        </Reference>\n                        <Popper placement=\"bottom-end\"\n                        >\n                          {({ ref, style, placement, arrowProps }) => (\n                            <Card ref={ref}\n                              style={{\n                                ...style,\n                                left: '-120px',\n                                opacity: 1,\n                                display: dropdownVisible ? 'block' : 'none',\n                              }}\n                              data-placement={placement}>\n                              <CardBody>\n                                <div ref={arrowProps.ref} style={arrowProps.style} />\n                                <Button\n                                  onClick={() => logout()}\n                                >\n                                  Log Out\n                          </Button>\n                              </CardBody>\n                            </Card>\n                          )}\n                        </Popper>\n                      </Manager>\n                    </div>\n                  </Fragment>\n                )\n              }\n            </Row>\n          </Container>\n        }\n      }\n    </AuthContext.Consumer>\n  );\n}"]},"metadata":{},"sourceType":"module"}