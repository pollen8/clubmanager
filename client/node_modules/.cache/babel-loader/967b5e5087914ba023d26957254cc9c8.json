{"ast":null,"code":"var _jsxFileName = \"/home/rob/personal/cra-test/src/Attendance/Attendance.tsx\";\nimport React from 'react';\nimport DatePicker from 'react-date-picker';\nimport { Card, CardBody, Col, Container, Row } from '../app/components/Layout';\n// import { memberState } from '../Members/memberState';\n// import { attendanceState } from './attendanceState';\nimport { SessionAttendance } from './SessionAttendance';\nimport { SessionPayments } from './SessionPayments';\nexport var Attendance = function Attendance() {\n  var search = {\n    membership: '',\n    name: '',\n    season: '' // const { members } = memberState(search);\n    // const { editAttendance, attendance } = attendanceState(members);\n\n  };\n  var memebers = [];\n  var attendance = [];\n  return React.createElement(Container, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Card, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, React.createElement(DatePicker, {\n    value: new Date(),\n    returnValue: \"start\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, React.createElement(\"table\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"thead\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(\"tr\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, \"Member\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"Attended\"), React.createElement(\"th\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Paid\"))), React.createElement(\"tbody\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  }, attendance.map(function (line, i) {\n    return React.createElement(\"tr\", {\n      key: line.member.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49\n      },\n      __self: this\n    }, React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50\n      },\n      __self: this\n    }, React.createElement(\"label\", {\n      htmlFor: \"attended-\".concat(i),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, line.member.name)), React.createElement(\"td\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55\n      },\n      __self: this\n    }));\n  })))))), React.createElement(Col, {\n    size: 1,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(SessionAttendance, {\n    attendance: attendance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(Col, {\n    size: 1,\n    md: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91\n    },\n    __self: this\n  }, React.createElement(SessionPayments, {\n    attendance: attendance,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/home/rob/personal/cra-test/src/Attendance/Attendance.tsx"],"names":["React","DatePicker","Card","CardBody","Col","Container","Row","SessionAttendance","SessionPayments","Attendance","search","membership","name","season","memebers","attendance","Date","map","line","i","member","id"],"mappings":";AAAA,OAAOA,KAAP,MAA0B,OAA1B;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AAEA,SACEC,IADF,EAEEC,QAFF,EAGEC,GAHF,EAIEC,SAJF,EAMEC,GANF,QAOO,0BAPP;AASA;AACA;AACA,SAASC,iBAAT,QAAkC,qBAAlC;AACA,SAASC,eAAT,QAAgC,mBAAhC;AAEA,OAAO,IAAMC,UAAkB,GAAG,SAArBA,UAAqB,GAAM;AACtC,MAAMC,MAAe,GAAG;AACtBC,IAAAA,UAAU,EAAE,EADU;AAEtBC,IAAAA,IAAI,EAAE,EAFgB;AAGtBC,IAAAA,MAAM,EAAE,EAHc,CAKxB;AACA;;AANwB,GAAxB;AAOA,MAAMC,QAAe,GAAG,EAAxB;AACA,MAAMC,UAAiB,GAAG,EAA1B;AACA,SACE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAE,EAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,UAAD;AACE,IAAA,KAAK,EAAE,IAAIC,IAAJ,EADT;AAEE,IAAA,WAAW,EAAC,OAFd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAKE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF,EAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF,CADF,CADF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAEID,UAAU,CAACE,GAAX,CAAe,UAACC,IAAD,EAAOC,CAAP,EAAa;AAC1B,WAAO;AAAI,MAAA,GAAG,EAAED,IAAI,CAACE,MAAL,CAAYC,EAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACL;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAO,MAAA,OAAO,qBAAcF,CAAd,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGD,IAAI,CAACE,MAAL,CAAYR,IADf,CADF,CADK,EAML;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANK,CAAP;AA8BD,GA/BD,CAFJ,CARF,CADF,CALF,CADF,CADF,EAyDE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAc,IAAA,EAAE,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,iBAAD;AACE,IAAA,UAAU,EAAEG,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAzDF,EA6DE,oBAAC,GAAD;AAAK,IAAA,IAAI,EAAE,CAAX;AAAc,IAAA,EAAE,EAAE,CAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,eAAD;AACE,IAAA,UAAU,EAAEA,UADd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA7DF,CADF,CADF;AAsED,CAhFM","sourcesContent":["import React, { FC } from 'react';\nimport DatePicker from 'react-date-picker';\n\nimport {\n  Card,\n  CardBody,\n  Col,\n  Container,\n  Input,\n  Row,\n} from '../app/components/Layout';\nimport { ISearch } from '../Members/components/Filter';\n// import { memberState } from '../Members/memberState';\n// import { attendanceState } from './attendanceState';\nimport { SessionAttendance } from './SessionAttendance';\nimport { SessionPayments } from './SessionPayments';\n\nexport const Attendance: FC<{}> = () => {\n  const search: ISearch = {\n    membership: '',\n    name: '',\n    season: '',\n  }\n  // const { members } = memberState(search);\n  // const { editAttendance, attendance } = attendanceState(members);\n  const memebers: any[] = [];\n  const attendance: any[] = [];\n  return (\n    <Container>\n      <Row>\n        <Col md={12}>\n          <Card>\n            <DatePicker\n              value={new Date()}\n              returnValue=\"start\"\n            />\n            <CardBody>\n              <table>\n                <thead>\n                  <tr>\n                    <th>Member</th>\n                    <th>Attended</th>\n                    <th>Paid</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  {\n                    attendance.map((line, i) => {\n                      return <tr key={line.member.id}>\n                        <td>\n                          <label htmlFor={`attended-${i}`}>\n                            {line.member.name}\n                          </label>\n                        </td>\n                        <td>\n                          {/* <Input\n                            checked={line.attended}\n                            onChange={(e) => editAttendance({\n                              ...line,\n                              attended: e.target.checked,\n                            })}\n                            id={`attended-${i}`}\n                            type=\"checkbox\" /> */}\n                        </td>\n                        {/* <td>\n                          {\n                            line.member.membership == 'guest'\n                              ? <Input type=\"checkbox\"\n                                checked={line.paid}\n                                onChange={(e) => editAttendance({\n                                  ...line,\n                                  paid: e.target.checked,\n                                })}\n                              />\n                              : '-'\n                          }\n                        </td> */}\n                      </tr>;\n                    })\n                  }\n                </tbody>\n              </table>\n\n            </CardBody>\n          </Card>\n        </Col>\n        <Col size={1} md={6}>\n          <SessionAttendance\n            attendance={attendance} />\n        </Col>\n        <Col size={1} md={6}>\n          <SessionPayments\n            attendance={attendance} />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\n"]},"metadata":{},"sourceType":"module"}