{"ast":null,"code":"import _classCallCheck from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport auth0 from 'auth0-js'; // import Parse from 'parse';\n\nimport history from '../history';\n\nvar OldAuth =\n/*#__PURE__*/\nfunction () {\n  // ...\n  function OldAuth() {\n    _classCallCheck(this, OldAuth);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: 'bhp.eu.auth0.com',\n      clientID: 'kNgXEPRYCGsdlTlrZnPZGtK7GeDRgnbu',\n      redirectUri: \"\".concat(document.location.origin, \"/callback\"),\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n    this.userProfile = null;\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n  }\n\n  _createClass(OldAuth, [{\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"getAccessToken\",\n    value: function getAccessToken() {\n      var accessToken = localStorage.getItem('access_token');\n\n      if (!accessToken) {\n        throw new Error('No Access Token found');\n      }\n\n      return accessToken;\n    }\n  }, {\n    key: \"getProfile\",\n    value: function getProfile(cb) {\n      var _this = this;\n\n      var accessToken = this.getAccessToken();\n      this.auth0.client.userInfo(accessToken, function (err, profile) {\n        if (profile) {\n          _this.userProfile = profile;\n        }\n\n        cb(err, profile);\n      });\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this2 = this;\n\n      this.auth0.parseHash(function (err, authResult) {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          _this2.setSession(authResult); // Parse.User.become(authResult.idTokenPayload['https://pegasus.back4app.io/parse_session_token']);\n\n\n          history.replace('/');\n        } else if (err) {\n          history.replace('/home');\n          console.log(err);\n        }\n      });\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      // Set the time that the Access Token will expire at\n      var expiresAt = JSON.stringify(authResult.expiresIn * 1000 + new Date().getTime());\n      localStorage.setItem('access_token', authResult.accessToken);\n      localStorage.setItem('id_token', authResult.idToken);\n      localStorage.setItem('expires_at', expiresAt);\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      // Clear Access Token and ID Token from local storage\n      localStorage.removeItem('access_token');\n      localStorage.removeItem('id_token');\n      localStorage.removeItem('expires_at'); // Parse.User.logOut();\n      // navigate to the home route\n\n      history.replace('/home');\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      // Check whether the current time is past the \n      // Access Token's expiry time\n      var expiresAt = JSON.parse(String(localStorage.getItem('expires_at')));\n      return new Date().getTime() < expiresAt;\n    }\n  }]);\n\n  return OldAuth;\n}(); ////////////////\n\n\nvar Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: 'bhp.eu.auth0.com',\n      clientID: 'kNgXEPRYCGsdlTlrZnPZGtK7GeDRgnbu',\n      redirectUri: \"\".concat(document.location.origin, \"/callback\"),\n      audience: 'https://bhp.eu.auth0.com/userinfo',\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n    this.idToken = '';\n    this.expiresAt = 0;\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  _createClass(Auth, [{\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken() {\n      return this.idToken;\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this3 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this3.auth0.parseHash(function (err, authResult) {\n          if (err) return reject(err);\n\n          if (!authResult || !authResult.idToken) {\n            return reject(err);\n          }\n\n          _this3.setSession(authResult);\n\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      this.idToken = authResult.idToken;\n      console.log(this.idToken); // set the time that the id token will expire at\n\n      this.expiresAt = authResult.expiresIn ? authResult.expiresIn * 1000 + new Date().getTime() : 0;\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      this.auth0.logout({\n        returnTo: 'http://localhost:3000',\n        clientID: '<YOUR_AUTH0_CLIENT_ID>'\n      });\n    }\n  }, {\n    key: \"silentAuth\",\n    value: function silentAuth() {\n      var _this4 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this4.auth0.checkSession({}, function (err, authResult) {\n          if (err) return reject(err);\n\n          _this4.setSession(authResult);\n\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      // Check whether the current time is past the token's expiry time\n      return new Date().getTime() < this.expiresAt;\n    }\n  }]);\n\n  return Auth;\n}();\n\nvar auth = new Auth();\nexport default auth;","map":{"version":3,"sources":["/home/rob/personal/cra-test/src/Auth/Auth.ts"],"names":["auth0","history","OldAuth","WebAuth","domain","clientID","redirectUri","document","location","origin","responseType","scope","userProfile","login","bind","logout","handleAuthentication","isAuthenticated","getProfile","authorize","accessToken","localStorage","getItem","Error","cb","getAccessToken","client","userInfo","err","profile","parseHash","authResult","idToken","setSession","replace","console","log","expiresAt","JSON","stringify","expiresIn","Date","getTime","setItem","removeItem","parse","String","Auth","audience","Promise","resolve","reject","returnTo","checkSession","auth"],"mappings":"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","sourcesContent":["import auth0, {\n  Auth0DecodedHash,\n  Auth0UserProfile,\n} from 'auth0-js';\n\n// import Parse from 'parse';\nimport history from '../history';\n\nclass OldAuth {\n\n  auth0 = new auth0.WebAuth({\n    domain: 'bhp.eu.auth0.com',\n    clientID: 'kNgXEPRYCGsdlTlrZnPZGtK7GeDRgnbu',\n    redirectUri: `${document.location!.origin}/callback`,\n    responseType: 'token id_token',\n    scope: 'openid profile'\n  });\n\n  userProfile: Auth0UserProfile | null = null;;\n  // ...\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n  }\n\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  getAccessToken() {\n    const accessToken = localStorage.getItem('access_token');\n    if (!accessToken) {\n      throw new Error('No Access Token found');\n    }\n    return accessToken;\n  }\n\n  getProfile(cb: Function) {\n    let accessToken = this.getAccessToken();\n    this.auth0.client.userInfo(accessToken, (err, profile) => {\n      if (profile) {\n        this.userProfile = profile;\n      }\n      cb(err, profile);\n    });\n  }\n\n  handleAuthentication() {\n    this.auth0.parseHash((err, authResult) => {\n      if (authResult && authResult.accessToken && authResult.idToken) {\n        this.setSession(authResult);\n        // Parse.User.become(authResult.idTokenPayload['https://pegasus.back4app.io/parse_session_token']);\n        history.replace('/');\n      } else if (err) {\n        history.replace('/home');\n        console.log(err);\n      }\n    });\n  }\n\n  setSession(authResult: any) {\n    // Set the time that the Access Token will expire at\n    let expiresAt = JSON.stringify((authResult.expiresIn * 1000) + new Date().getTime());\n    localStorage.setItem('access_token', authResult.accessToken);\n    localStorage.setItem('id_token', authResult.idToken);\n    localStorage.setItem('expires_at', expiresAt);\n  }\n\n  logout() {\n    // Clear Access Token and ID Token from local storage\n    localStorage.removeItem('access_token');\n    localStorage.removeItem('id_token');\n    localStorage.removeItem('expires_at');\n    // Parse.User.logOut();\n    // navigate to the home route\n    history.replace('/home');\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the \n    // Access Token's expiry time\n    let expiresAt = JSON.parse(String(localStorage.getItem('expires_at')));\n    return new Date().getTime() < expiresAt;\n  }\n}\n////////////////\n\nclass Auth {\n  auth0 = new auth0.WebAuth({\n    domain: 'bhp.eu.auth0.com',\n    clientID: 'kNgXEPRYCGsdlTlrZnPZGtK7GeDRgnbu',\n    redirectUri: `${document.location!.origin}/callback`,\n    audience: 'https://bhp.eu.auth0.com/userinfo',\n    responseType: 'token id_token',\n    scope: 'openid profile'\n  });\n\n  idToken: string | undefined = '';\n  expiresAt: number = 0;\n\n  constructor() {\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  handleAuthentication() {\n    return new Promise((resolve, reject) => {\n      this.auth0.parseHash((err, authResult) => {\n        if (err) return reject(err);\n        if (!authResult || !authResult.idToken) {\n          return reject(err);\n        }\n        this.setSession(authResult);\n        resolve();\n      });\n    })\n  }\n\n  setSession(authResult: Auth0DecodedHash) {\n    this.idToken = authResult.idToken;\n    console.log(this.idToken);\n    // set the time that the id token will expire at\n    this.expiresAt = authResult.expiresIn\n      ? authResult.expiresIn * 1000 + new Date().getTime()\n      : 0;\n  }\n\n  logout() {\n    this.auth0.logout({\n      returnTo: 'http://localhost:3000',\n      clientID: '<YOUR_AUTH0_CLIENT_ID>',\n    });\n  }\n\n  silentAuth() {\n    return new Promise((resolve, reject) => {\n      this.auth0.checkSession({}, (err, authResult) => {\n        if (err) return reject(err);\n        this.setSession(authResult);\n        resolve();\n      });\n    });\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the token's expiry time\n    return new Date().getTime() < this.expiresAt;\n  }\n}\n\nconst auth = new Auth();\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}