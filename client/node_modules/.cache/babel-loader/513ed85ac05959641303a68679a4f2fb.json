{"ast":null,"code":"import _classCallCheck from \"/home/rob/personal/clubmanager-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rob/personal/clubmanager-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rob/personal/clubmanager-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rob/personal/clubmanager-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rob/personal/clubmanager-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/home/rob/personal/clubmanager-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/rob/personal/clubmanager-frontend/src/app/components/Grid.tsx\";\nimport React from 'react';\nimport { animated, Transition } from 'react-spring';\n\nvar commonCss = function commonCss(columns, width, height, item) {\n  var row = Math.floor(item.index / columns);\n  return {\n    left: item.index % columns * width + '%',\n    position: 'absolute',\n    top: row * height + 'px',\n    width: width + '%'\n  };\n};\n\nvar from = function from(columns, width, height) {\n  return function (item) {\n    return _objectSpread({}, commonCss(columns, width, height, item), {\n      opacity: 0,\n      transform: 'translate3d(0,40px,0)'\n    });\n  };\n};\n\nvar show = function show(columns, width, height) {\n  return function (item) {\n    return _objectSpread({}, commonCss(columns, width, height, item), {\n      opacity: 1,\n      transform: 'translate3d(0,0px,0)'\n    });\n  };\n};\n\nvar leave = function leave(columns, width, height) {\n  return function (item) {\n    return _objectSpread({}, commonCss(columns, width, height, item), {\n      opacity: 0,\n      transform: 'translate3d(0,40px,0)'\n    });\n  };\n};\n\nexport var Grid =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(Grid, _React$Component);\n\n  function Grid() {\n    _classCallCheck(this, Grid);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Grid).apply(this, arguments));\n  }\n\n  _createClass(Grid, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          columns = _this$props.columns,\n          height = _this$props.height,\n          data = _this$props.data;\n      var containerHeight = Math.ceil(data.length / columns) * height;\n      var width = 100 / columns;\n      return React.createElement(\"div\", {\n        style: {\n          position: 'relative',\n          height: containerHeight + 'px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Transition, {\n        items: data,\n        native: true,\n        keys: function keys(item) {\n          return item.id;\n        },\n        from: from(columns, width, height),\n        enter: show(columns, width, height),\n        update: show(columns, width, height),\n        leave: leave(columns, width, height),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, function (item) {\n        return function (props) {\n          return React.createElement(animated.div, {\n            style: props,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 63\n            },\n            __self: this\n          }, item.component);\n        };\n      }));\n    }\n  }]);\n\n  return Grid;\n}(React.Component);","map":{"version":3,"sources":["/home/rob/personal/clubmanager-frontend/src/app/components/Grid.tsx"],"names":["React","animated","Transition","commonCss","columns","width","height","item","row","Math","floor","index","left","position","top","from","opacity","transform","show","leave","Grid","props","data","containerHeight","ceil","length","id","component","Component"],"mappings":"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","sourcesContent":["import React, { CSSProperties } from 'react';\nimport {\n  animated,\n  Transition,\n} from 'react-spring';\n\ninterface IProps {\n  columns: number;\n  height: number;\n  data: Array<{\n    id: string;\n    index: number;\n    component: React.ReactElement<any>;\n  }>;\n}\n\nconst commonCss = (columns: number, width: number, height: number, item: any): CSSProperties => {\n  const row = Math.floor(item.index / columns);\n  return {\n    left: item.index % columns * width + '%',\n    position: 'absolute',\n    top: row * height + 'px',\n    width: width + '%',\n  };\n};\n\nconst from = (columns: number, width: number, height: number) => (item: any) => ({\n  ...commonCss(columns, width, height, item),\n  opacity: 0,\n  transform: 'translate3d(0,40px,0)',\n});\n\nconst show = (columns: number, width: number, height: number) => (item: any) => ({\n  ...commonCss(columns, width, height, item),\n  opacity: 1,\n  transform: 'translate3d(0,0px,0)',\n});\n\nconst leave = (columns: number, width: number, height: number) => (item: any) => ({\n  ...commonCss(columns, width, height, item),\n  opacity: 0,\n  transform: 'translate3d(0,40px,0)',\n});\n\nexport class Grid extends React.Component<IProps> {\n\n  public render() {\n    const { columns, height, data } = this.props;\n    const containerHeight = Math.ceil(data.length / columns) * height;\n    const width = 100 / columns;\n    return (\n      <div style={{ position: 'relative', height: containerHeight + 'px' }}>\n        <Transition\n          items={data}\n          native\n          keys={(item: any) => item.id}\n          from={from(columns, width, height)}\n          enter={show(columns, width, height)}\n          update={show(columns, width, height)}\n          leave={leave(columns, width, height)}\n        >\n          {(item: any) => (props: any) =>\n            <animated.div style={props}>{item.component}</animated.div>\n          }\n        </Transition>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}