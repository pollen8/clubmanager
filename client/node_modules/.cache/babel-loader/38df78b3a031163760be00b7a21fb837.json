{"ast":null,"code":"import * as React from 'react';\nimport { SSRContext, createSSRManager } from './internal/SSRContext';\nimport { isPromiseLike } from './utils';\nexport function getMarkupFromTree(_ref) {\n  var tree = _ref.tree,\n      onBeforeRender = _ref.onBeforeRender,\n      renderFunction = _ref.renderFunction;\n  var ssrManager = createSSRManager();\n\n  function process() {\n    try {\n      if (onBeforeRender) {\n        onBeforeRender();\n      }\n\n      var html = renderFunction(React.createElement(SSRContext.Provider, {\n        value: ssrManager\n      }, tree));\n\n      if (!ssrManager.hasPromises()) {\n        return html;\n      }\n    } catch (e) {\n      if (!isPromiseLike(e)) {\n        throw e;\n      }\n\n      ssrManager.register(e);\n    }\n\n    return ssrManager.consumeAndAwaitPromises().then(process);\n  }\n\n  return Promise.resolve().then(process);\n}","map":null,"metadata":{},"sourceType":"module"}