{"ast":null,"code":"import _classCallCheck from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _objectSpread from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _taggedTemplateLiteral from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/rob/personal/cra-test/src/Routes.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  height: 100%;\\n  color: \", \";\\n  display: flex;\\n  flex-direction: column;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport './App.css';\nimport ApolloClient from 'apollo-boost';\nimport React, { Component, createContext } from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport { Route, Router } from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\nimport { App } from './App';\nimport auth from './Auth/Auth';\nimport { Callback } from './Callback/Callback';\nimport history from './history';\nimport { Home } from './Home';\nimport { theme } from './theme';\nvar Background = styled.div(_templateObject(), function (_ref) {\n  var theme = _ref.theme;\n  return theme.grey800;\n}); // const auth = new Auth();\n\nexport var AuthContext = createContext(auth);\n\nvar handleAuthentication = function handleAuthentication(_ref2) {\n  var location = _ref2.location;\n\n  if (/access_token|id_token|error/.test(location.hash)) {\n    auth.handleAuthentication();\n  }\n};\n\nvar client = new ApolloClient({\n  request: function request(operation) {\n    operation.setContext(function (context) {\n      return {\n        headers: _objectSpread({}, context.headers, {\n          authorization: auth.getIdToken()\n        })\n      };\n    });\n  },\n  uri: 'http://localhost:4000'\n});\n\nvar Routes =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Routes, _Component);\n\n  function Routes() {\n    _classCallCheck(this, Routes);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Routes).apply(this, arguments));\n  }\n\n  _createClass(Routes, [{\n    key: \"render\",\n    value: function render() {\n      return React.createElement(Router, {\n        history: history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(ThemeProvider, {\n        theme: theme,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(ApolloProvider, {\n        client: client,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, React.createElement(AuthContext.Provider, {\n        value: auth,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, React.createElement(Background, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(Route, {\n        path: \"/\",\n        render: function render(props) {\n          return React.createElement(App, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/home\",\n        render: function render(props) {\n          return React.createElement(Home, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 62\n            },\n            __self: this\n          });\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"/callback\",\n        render: function render(props) {\n          handleAuthentication(props);\n          return React.createElement(Callback, Object.assign({}, props, {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 65\n            },\n            __self: this\n          }));\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }))))));\n    }\n  }]);\n\n  return Routes;\n}(Component);\n\nexport default Routes;","map":{"version":3,"sources":["/home/rob/personal/cra-test/src/Routes.tsx"],"names":["ApolloClient","React","Component","createContext","ApolloProvider","Route","Router","styled","ThemeProvider","App","auth","Callback","history","Home","theme","Background","div","grey800","AuthContext","handleAuthentication","location","test","hash","client","request","operation","setContext","context","headers","authorization","getIdToken","uri","Routes","props"],"mappings":"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","sourcesContent":["import './App.css';\n\nimport ApolloClient from 'apollo-boost';\nimport React, {\n  Component,\n  createContext,\n} from 'react';\nimport { ApolloProvider } from 'react-apollo';\nimport {\n  Route,\n  Router,\n} from 'react-router-dom';\nimport styled, { ThemeProvider } from 'styled-components';\n\nimport { App } from './App';\nimport auth, { Auth } from './Auth/Auth';\nimport { Callback } from './Callback/Callback';\nimport history from './history';\nimport { Home } from './Home';\nimport { theme } from './theme';\n\nconst Background = styled.div`\n  height: 100%;\n  color: ${({ theme }) => theme.grey800};\n  display: flex;\n  flex-direction: column;\n`;\n\n// const auth = new Auth();\n\nexport const AuthContext = createContext<Auth>(auth);\n\nconst handleAuthentication = ({ location }: any) => {\n  if (/access_token|id_token|error/.test(location.hash)) {\n    auth.handleAuthentication();\n  }\n}\n\nconst client = new ApolloClient({\n  request: (operation) => {\n    operation.setContext((context) => ({\n      headers: {\n        ...context.headers,\n        authorization: auth.getIdToken(),\n      },\n    }));\n  },\n  uri: 'http://localhost:4000',\n});\n\nclass Routes extends Component {\n\n  render() {\n    return (\n      <Router history={history}>\n        <ThemeProvider theme={theme}>\n          <ApolloProvider client={client}>\n            <AuthContext.Provider value={auth}>\n\n              <Background>\n                <Route path=\"/\" render={(props: any) => <App {...props} />} />\n                <Route path=\"/home\" render={(props: any) => <Home />} />\n                <Route path=\"/callback\" render={(props: any) => {\n                  handleAuthentication(props);\n                  return <Callback {...props} />\n                }} />\n              </Background>\n            </AuthContext.Provider>\n          </ApolloProvider>\n        </ThemeProvider>\n      </Router >\n    );\n  }\n}\n\nexport default Routes;\n"]},"metadata":{},"sourceType":"module"}