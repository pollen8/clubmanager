{"ast":null,"code":"import _objectSpread from \"/home/rob/personal/clubmanager/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nimport _slicedToArray from \"/home/rob/personal/clubmanager/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/rob/personal/clubmanager/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/rob/personal/clubmanager/client/src/Club/components/ClubForm.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  mutation UpdateClub($name: String!, $description: String) {\\n    updateClub(name: $name, description: $description) {\\n      id,\\n      name,\\n      description\\n    }\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport React, { useEffect, useState } from 'react';\nimport { useMutation } from 'react-apollo-hooks';\nimport { IoIosAddCircle } from 'react-icons/io';\nimport { Button, CardBody, FormGroup, Input, Label, ModalFooter, SlidePanelBody } from '../../app/components/Layout';\nimport { FILTER_CLUBS } from '../Club';\nvar blank = {\n  id: '',\n  name: '',\n  description: ''\n};\nvar UPDATE_CLUB = gql(_templateObject());\nexport var ClubForm = function ClubForm(_ref) {\n  var initialData = _ref.initialData,\n      setSelected = _ref.setSelected;\n\n  var _useState = useState(blank),\n      _useState2 = _slicedToArray(_useState, 2),\n      club = _useState2[0],\n      setClub = _useState2[1];\n\n  useEffect(function () {\n    if (initialData !== null) {\n      setClub(initialData);\n    } else {\n      setClub(blank);\n    }\n  }, [initialData]);\n  var updateClub = useMutation(UPDATE_CLUB, {\n    update: function update(cache, _ref2) {\n      var addClub = _ref2.data.addClub;\n      var c = cache.readQuery({\n        query: FILTER_CLUBS\n      });\n      console.log('cache', c);\n      var filterClubs = c.filterClubs;\n      var i = filterClubs.findIndex(function (season) {\n        return season.id === addClub.id;\n      });\n      var data = i === -1 ? filterClubs.concat([addClub]) : filterClubs.map(function (season) {\n        return season.id === addClub.id ? addClub : season;\n      });\n      cache.writeQuery({\n        query: FILTER_CLUBS,\n        data: {\n          filterClubs: data\n        }\n      });\n    }\n  });\n  return React.createElement(SlidePanelBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(CardBody, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"clubName\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, \"Name\"), React.createElement(Input, {\n    id: \"clubName\",\n    value: club.name,\n    onChange: function onChange(e) {\n      setClub(_objectSpread({}, club, {\n        name: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(Label, {\n    htmlFor: \"clubDescription\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"Description\"), React.createElement(Input, {\n    id: \"clubDescription\",\n    value: club.description,\n    onChange: function onChange(e) {\n      return setClub(_objectSpread({}, club, {\n        description: e.target.value\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }))), React.createElement(ModalFooter, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102\n    },\n    __self: this\n  }, React.createElement(Button, {\n    outline: true,\n    onClick: function onClick() {\n      return setSelected(null);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103\n    },\n    __self: this\n  }, \"Clear\"), React.createElement(Button, {\n    onClick: function onClick() {\n      console.log('club', club);\n      upadateClub({\n        variables: club\n      });\n      setClub(blank);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109\n    },\n    __self: this\n  }, React.createElement(IoIosAddCircle, {\n    size: \"1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), initialData === null ? 'Add' : 'Update')));\n};","map":{"version":3,"sources":["/home/rob/personal/clubmanager/client/src/Club/components/ClubForm.tsx"],"names":["gql","React","useEffect","useState","useMutation","IoIosAddCircle","Button","CardBody","FormGroup","Input","Label","ModalFooter","SlidePanelBody","FILTER_CLUBS","blank","id","name","description","UPDATE_CLUB","ClubForm","initialData","setSelected","club","setClub","updateClub","update","cache","addClub","data","c","readQuery","query","console","log","filterClubs","i","findIndex","season","concat","map","writeQuery","e","target","value","upadateClub","variables"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport React, {\n  FC,\n  useEffect,\n  useState,\n} from 'react';\nimport { useMutation } from 'react-apollo-hooks';\nimport { IoIosAddCircle } from 'react-icons/io';\n\nimport {\n  Button,\n  CardBody,\n  FormGroup,\n  Input,\n  Label,\n  ModalFooter,\n  SlidePanelBody,\n} from '../../app/components/Layout';\nimport {\n  FILTER_CLUBS,\n  IClub,\n} from '../Club';\n\ninterface IProps {\n  initialData: null | IClub;\n  setSelected: any;\n}\n\nconst blank: IClub = {\n  id: '',\n  name: '',\n  description: '',\n};\n\nconst UPDATE_CLUB = gql`\n  mutation UpdateClub($name: String!, $description: String) {\n    updateClub(name: $name, description: $description) {\n      id,\n      name,\n      description\n    }\n  }\n`;\n\nexport const ClubForm: FC<IProps> = ({ initialData, setSelected }) => {\n  const [club, setClub] = useState<IClub>(blank);\n\n  useEffect(() => {\n    if (initialData !== null) {\n      setClub(initialData);\n    } else {\n      setClub(blank);\n    }\n  }, [initialData]);\n\n  const updateClub = useMutation(UPDATE_CLUB, {\n    update: (cache, { data: { addClub } }) => {\n      const c = cache.readQuery<any>({ query: FILTER_CLUBS });\n      console.log('cache', c);\n      const { filterClubs } = c;\n      const i = filterClubs.findIndex((season: any) => season.id === addClub.id);\n      const data = i === -1\n        ? filterClubs.concat([addClub])\n        : filterClubs.map((season: any) => season.id === addClub.id ? addClub : season);\n      cache.writeQuery({\n        query: FILTER_CLUBS,\n        data: { filterClubs: data },\n      });\n    }\n  });\n  return (\n\n    <SlidePanelBody>\n      <CardBody>\n        <FormGroup>\n          <Label htmlFor=\"clubName\">Name</Label>\n          <Input\n            id=\"clubName\"\n            value={club.name}\n            onChange={(e) => {\n              setClub({\n                ...club,\n                name: e.target.value,\n              })\n            }}\n          />\n        </FormGroup>\n        <FormGroup>\n          <Label htmlFor=\"clubDescription\">\n            Description\n          </Label>\n          <Input\n            id=\"clubDescription\"\n            value={club.description}\n            onChange={(e) => setClub({\n              ...club,\n              description: e.target.value,\n            })} />\n        </FormGroup>\n\n      </CardBody>\n      <ModalFooter>\n        <Button\n          outline\n          onClick={() => setSelected(null)}>\n          Clear\n         </Button>\n\n        <Button\n          onClick={() => {\n            console.log('club', club);\n            upadateClub({ variables: club });\n            setClub(blank);\n          }}>\n          <IoIosAddCircle size=\"1rem\" />\n          {initialData === null ? 'Add' : 'Update'}\n        </Button>\n      </ModalFooter>\n    </SlidePanelBody>\n\n  )\n}"]},"metadata":{},"sourceType":"module"}