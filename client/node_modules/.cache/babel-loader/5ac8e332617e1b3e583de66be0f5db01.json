{"ast":null,"code":"import _classCallCheck from \"/home/rob/personal/clubmanager/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rob/personal/clubmanager/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport auth0 from 'auth0-js'; // import Parse from 'parse';\n\nexport var Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: 'bhp.eu.auth0.com',\n      clientID: 'kNgXEPRYCGsdlTlrZnPZGtK7GeDRgnbu',\n      redirectUri: \"\".concat(document.location.origin, \"/callback\"),\n      audience: 'https://bhp.eu.auth0.com/userinfo',\n      responseType: 'token id_token',\n      scope: 'openid profile'\n    });\n    this.authFlag = '';\n    this.idToken = '';\n    this.expiresAt = 0;\n    this.userProfile = null;\n    this.authFlag = 'isLoggedIn';\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n  }\n\n  _createClass(Auth, [{\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"getAccessToken\",\n    value: function getAccessToken() {\n      debugger;\n      var accessToken = localStorage.getItem('access_token');\n\n      if (!accessToken) {\n        throw new Error('No Access Token found');\n      }\n\n      return accessToken;\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken() {\n      return this.idToken;\n    }\n  }, {\n    key: \"getProfile\",\n    value: function getProfile(cb) {\n      var _this = this;\n\n      var accessToken = this.getAccessToken();\n      this.auth0.client.userInfo(accessToken, function (err, profile) {\n        if (profile) {\n          _this.userProfile = profile;\n        }\n\n        cb(err, profile);\n      });\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.auth0.parseHash(function (err, authResult) {\n          if (err) return reject(err);\n\n          if (!authResult || !authResult.idToken) {\n            return reject(err);\n          }\n\n          _this2.setSession(authResult);\n\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      this.idToken = authResult.idToken; // set the time that the id token will expire at\n\n      this.expiresAt = authResult.expiresIn ? authResult.expiresIn * 1000 + new Date().getTime() : 0;\n      localStorage.setItem(this.authFlag, JSON.stringify(true));\n      localStorage.setItem('access_token', String(authResult.accessToken));\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      localStorage.setItem(this.authFlag, JSON.stringify(false));\n      localStorage.removeItem('access_token');\n      this.auth0.logout({\n        returnTo: 'http://localhost:3000',\n        clientID: 'D1lahFIpV82Mum7TimXgG0WPxpP8suGo'\n      });\n    }\n  }, {\n    key: \"silentAuth\",\n    value: function silentAuth() {\n      var _this3 = this;\n\n      if (this.isAuthenticated()) {\n        return new Promise(function (resolve, reject) {\n          _this3.auth0.checkSession({}, function (err, authResult) {\n            debugger;\n\n            if (err) {\n              localStorage.removeItem(_this3.authFlag);\n              return reject(err);\n            }\n\n            _this3.setSession(authResult);\n\n            resolve();\n          });\n        });\n      }\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      // Check whether the current time is past the token's expiry time\n      //return new Date().getTime() < this.expiresAt;\n      return JSON.parse(String(localStorage.getItem(this.authFlag)));\n    }\n  }]);\n\n  return Auth;\n}();\nvar auth = new Auth();\nexport default auth;","map":{"version":3,"sources":["/home/rob/personal/clubmanager/client/src/Auth/Auth.ts"],"names":["auth0","Auth","WebAuth","domain","clientID","redirectUri","document","location","origin","audience","responseType","scope","authFlag","idToken","expiresAt","userProfile","login","bind","logout","handleAuthentication","isAuthenticated","getProfile","authorize","accessToken","localStorage","getItem","Error","cb","getAccessToken","client","userInfo","err","profile","Promise","resolve","reject","parseHash","authResult","setSession","expiresIn","Date","getTime","setItem","JSON","stringify","String","removeItem","returnTo","checkSession","parse","auth"],"mappings":"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","sourcesContent":["import auth0, {\n  Auth0DecodedHash,\n  Auth0UserProfile,\n} from 'auth0-js';\n\n// import Parse from 'parse';\nimport history from '../history';\n\nexport class Auth {\n\n  auth0 = new auth0.WebAuth({\n    domain: 'bhp.eu.auth0.com',\n    clientID: 'kNgXEPRYCGsdlTlrZnPZGtK7GeDRgnbu',\n    redirectUri: `${document.location!.origin}/callback`,\n    audience: 'https://bhp.eu.auth0.com/userinfo',\n    responseType: 'token id_token',\n    scope: 'openid profile'\n  })\n\n  authFlag: string = '';\n  idToken: string | undefined = '';\n  expiresAt = 0;\n  userProfile: Auth0UserProfile | null = null;\n\n  constructor() {\n    this.authFlag = 'isLoggedIn';\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n    this.getProfile = this.getProfile.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  getAccessToken() {\n    debugger;\n    const accessToken = localStorage.getItem('access_token');\n    if (!accessToken) {\n      throw new Error('No Access Token found');\n    }\n    return accessToken;\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  getProfile(cb: Function) {\n    let accessToken = this.getAccessToken();\n    this.auth0.client.userInfo(accessToken, (err, profile) => {\n      if (profile) {\n        this.userProfile = profile;\n      }\n      cb(err, profile);\n    });\n  }\n\n  handleAuthentication() {\n    return new Promise((resolve, reject) => {\n      this.auth0.parseHash((err, authResult) => {\n        if (err) return reject(err);\n        if (!authResult || !authResult.idToken) {\n          return reject(err);\n        }\n        this.setSession(authResult);\n        resolve();\n      });\n    })\n  }\n\n  setSession(authResult: Auth0DecodedHash) {\n    this.idToken = authResult.idToken;\n    // set the time that the id token will expire at\n    this.expiresAt = authResult.expiresIn\n      ? authResult.expiresIn * 1000 + new Date().getTime()\n      : 0;\n    localStorage.setItem(this.authFlag, JSON.stringify(true));\n    localStorage.setItem('access_token', String(authResult.accessToken));\n  }\n\n  logout() {\n    localStorage.setItem(this.authFlag, JSON.stringify(false));\n    localStorage.removeItem('access_token');\n    this.auth0.logout({\n      returnTo: 'http://localhost:3000',\n      clientID: 'D1lahFIpV82Mum7TimXgG0WPxpP8suGo',\n    });\n  }\n\n  silentAuth() {\n    if (this.isAuthenticated()) {\n      return new Promise((resolve, reject) => {\n        this.auth0.checkSession({}, (err, authResult) => {\n          debugger;\n          if (err) {\n            localStorage.removeItem(this.authFlag);\n            return reject(err);\n          }\n          this.setSession(authResult);\n          resolve();\n        });\n      });\n    }\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the token's expiry time\n    //return new Date().getTime() < this.expiresAt;\n    return JSON.parse(String(localStorage.getItem(this.authFlag)));\n  }\n}\n\nconst auth = new Auth();\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}