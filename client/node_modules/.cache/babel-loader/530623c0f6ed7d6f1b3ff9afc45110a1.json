{"ast":null,"code":"import _slicedToArray from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rob/personal/cra-test/src/Season/Season.tsx\";\nimport React, { useState } from 'react';\nimport { IoIosAddCircle } from 'react-icons/io';\nimport { useMedia } from 'use-media';\nimport { Grid } from '../app/components/Grid';\nimport { Button, Card, CardBody, Col, Content, Name, Row, sizes, SubHeading } from '../app/components/Layout';\nimport { SlidePanel } from '../app/components/SlidePanel';\nimport { DeleteConfirmation } from '../Members/components/DeleteConfirmation';\nimport { SeasonForm } from './components/SeasonForm';\nimport { seasonState } from './seasonState';\nexport var Season = function Season() {\n  var _seasonState = seasonState(),\n      seasons = _seasonState.seasons,\n      addSeason = _seasonState.addSeason,\n      editSeason = _seasonState.editSeason,\n      deleteSeason = _seasonState.deleteSeason;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      showForm = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var isWide = useMedia(\"(min-width: \".concat(sizes.desktop, \"px)\"));\n  var cards = seasons.map(function (season, index) {\n    return {\n      component: React.createElement(Card, {\n        style: {\n          display: 'flex',\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      }, React.createElement(Col, {\n        flexGrow: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44\n        },\n        __self: this\n      }, React.createElement(Name, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45\n        },\n        __self: this\n      }, season.startDate.toLocaleDateString(), \" -\", season.endDate.toLocaleDateString()), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, \"\\xA3\", season.visitorFee), \" visitor fee\", React.createElement(DeleteConfirmation, {\n        onDelete: function onDelete() {\n          return deleteSeason(season.id);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }), React.createElement(Button, {\n        size: \"sm\",\n        onClick: function onClick() {\n          setSelected(season);\n          showForm(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, \"Edit\"))))),\n      id: season.id,\n      index: index\n    };\n  });\n  return React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72\n    },\n    __self: this\n  }, React.createElement(Col, {\n    flexGrow: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73\n    },\n    __self: this\n  }, React.createElement(SubHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, \"Seasons\")), React.createElement(Col, {\n    flexGrow: 0,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Button, {\n    size: \"sm\",\n    color: \"grey500\",\n    onClick: function onClick() {\n      return showForm(!visible);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }, React.createElement(IoIosAddCircle, {\n    size: \"1rem\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80\n    },\n    __self: this\n  }), \"Add\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }, React.createElement(Col, {\n    md: 12,\n    style: {\n      marginRight: '13rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    data: cards,\n    height: isWide ? 190 : 160,\n    columns: isWide ? 3 : 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  })), React.createElement(SlidePanel, {\n    visible: visible,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(SeasonForm, {\n    addSeason: addSeason,\n    editSeason: editSeason,\n    initialData: selected,\n    setSelected: setSelected,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/home/rob/personal/cra-test/src/Season/Season.tsx"],"names":["React","useState","IoIosAddCircle","useMedia","Grid","Button","Card","CardBody","Col","Content","Name","Row","sizes","SubHeading","SlidePanel","DeleteConfirmation","SeasonForm","seasonState","Season","seasons","addSeason","editSeason","deleteSeason","visible","showForm","selected","setSelected","isWide","desktop","cards","map","season","index","component","display","position","startDate","toLocaleDateString","endDate","visitorFee","id","marginRight"],"mappings":"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","sourcesContent":["import React, {\n  FC,\n  useState,\n} from 'react';\nimport { IoIosAddCircle } from 'react-icons/io';\nimport { useMedia } from 'use-media';\n\nimport { Grid } from '../app/components/Grid';\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Content,\n  Name,\n  Row,\n  sizes,\n  SubHeading,\n} from '../app/components/Layout';\nimport { SlidePanel } from '../app/components/SlidePanel';\nimport { DeleteConfirmation } from '../Members/components/DeleteConfirmation';\nimport { SeasonForm } from './components/SeasonForm';\nimport {\n  ISeason,\n  seasonState,\n} from './seasonState';\n\nexport interface ISearch {\n  name: string;\n}\n\nexport const Season: FC<{}> = () => {\n  const { seasons, addSeason, editSeason, deleteSeason } = seasonState();\n  const [visible, showForm] = useState(false);\n  const [selected, setSelected] = useState<ISeason | null>(null);\n  const isWide = useMedia(`(min-width: ${sizes.desktop}px)`);\n  const cards = seasons\n    .map((season, index) => ({\n\n      component: (\n        <Card style={{ display: 'flex', position: 'relative' }}>\n          <CardBody>\n            <Row>\n              <Col flexGrow={1}>\n                <Name>\n                  {season.startDate.toLocaleDateString()} -\n                  {season.endDate.toLocaleDateString()}\n\n                </Name>\n                <strong>&pound;{season.visitorFee}</strong> visitor fee\n                <DeleteConfirmation onDelete={() => deleteSeason(season.id)} />\n                <Button\n                  size=\"sm\"\n                  onClick={() => {\n                    setSelected(season);\n                    showForm(true);\n                  }}>\n                  Edit\n                </Button>\n              </Col>\n            </Row>\n          </CardBody>\n        </Card>\n\n      ),\n      id: season.id,\n      index,\n    }))\n\n  return (\n    <Content>\n      <Row>\n        <Col flexGrow={2}>\n          <SubHeading>Seasons</SubHeading>\n        </Col>\n        <Col flexGrow={0}>\n          <Button size=\"sm\"\n            color=\"grey500\"\n            onClick={() => showForm(!visible)}>\n            <IoIosAddCircle size=\"1rem\" />\n            Add\n          </Button>\n        </Col>\n      </Row>\n      <Row>\n\n        <Col md={12} style={{ marginRight: '13rem' }}>\n          <Grid\n            data={cards}\n            height={isWide ? 190 : 160}\n            columns={isWide ? 3 : 1} />\n        </Col>\n        <SlidePanel visible={visible}>\n          <SeasonForm\n            addSeason={addSeason}\n            editSeason={editSeason}\n            initialData={selected}\n            setSelected={setSelected}\n          />\n        </SlidePanel>\n\n      </Row>\n    </Content>\n  );\n}"]},"metadata":{},"sourceType":"module"}