{"ast":null,"code":"import _classCallCheck from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport auth0 from 'auth0-js'; // import Parse from 'parse';\n\nexport var Auth =\n/*#__PURE__*/\nfunction () {\n  function Auth() {\n    _classCallCheck(this, Auth);\n\n    this.auth0 = new auth0.WebAuth({\n      domain: 'bhp.eu.auth0.com',\n      clientID: 'kNgXEPRYCGsdlTlrZnPZGtK7GeDRgnbu',\n      redirectUri: \"\".concat(document.location.origin, \"/callback\"),\n      audience: 'https://bhp.eu.auth0.com/userinfo',\n      responseType: 'token id_token',\n      scope: 'openid email'\n    });\n    this.authFlag = '';\n    this.idToken = '';\n    this.expiresAt = 0;\n    this.authFlag = 'isLoggedIn';\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  _createClass(Auth, [{\n    key: \"login\",\n    value: function login() {\n      this.auth0.authorize();\n    }\n  }, {\n    key: \"getIdToken\",\n    value: function getIdToken() {\n      return this.idToken;\n    }\n  }, {\n    key: \"getProfile\",\n    value: function getProfile(cb) {\n      var _this = this;\n\n      var accessToken = this.getAccessToken();\n      this.auth0.client.userInfo(accessToken, function (err, profile) {\n        if (profile) {\n          _this.userProfile = profile;\n        }\n\n        cb(err, profile);\n      });\n    }\n  }, {\n    key: \"handleAuthentication\",\n    value: function handleAuthentication() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        _this2.auth0.parseHash(function (err, authResult) {\n          if (err) return reject(err);\n\n          if (!authResult || !authResult.idToken) {\n            return reject(err);\n          }\n\n          _this2.setSession(authResult);\n\n          resolve();\n        });\n      });\n    }\n  }, {\n    key: \"setSession\",\n    value: function setSession(authResult) {\n      this.idToken = authResult.idToken; // set the time that the id token will expire at\n\n      this.expiresAt = authResult.expiresIn ? authResult.expiresIn * 1000 + new Date().getTime() : 0;\n      localStorage.setItem(this.authFlag, JSON.stringify(true));\n      localStorage.setItem('access_token', String(authResult.accessToken));\n    }\n  }, {\n    key: \"logout\",\n    value: function logout() {\n      localStorage.setItem(this.authFlag, JSON.stringify(false));\n      localStorage.removeItem('access_token');\n      this.auth0.logout({\n        returnTo: 'http://localhost:3000',\n        clientID: 'D1lahFIpV82Mum7TimXgG0WPxpP8suGo'\n      });\n    }\n  }, {\n    key: \"silentAuth\",\n    value: function silentAuth() {\n      var _this3 = this;\n\n      if (this.isAuthenticated()) {\n        return new Promise(function (resolve, reject) {\n          _this3.auth0.checkSession({}, function (err, authResult) {\n            if (err) {\n              localStorage.removeItem(_this3.authFlag);\n              return reject(err);\n            }\n\n            _this3.setSession(authResult);\n\n            resolve();\n          });\n        });\n      }\n    }\n  }, {\n    key: \"isAuthenticated\",\n    value: function isAuthenticated() {\n      // Check whether the current time is past the token's expiry time\n      //return new Date().getTime() < this.expiresAt;\n      return JSON.parse(String(localStorage.getItem(this.authFlag)));\n    }\n  }]);\n\n  return Auth;\n}();\nvar auth = new Auth();\nexport default auth;","map":{"version":3,"sources":["/home/rob/personal/cra-test/src/Auth/Auth.ts"],"names":["auth0","Auth","WebAuth","domain","clientID","redirectUri","document","location","origin","audience","responseType","scope","authFlag","idToken","expiresAt","login","bind","logout","handleAuthentication","isAuthenticated","authorize","cb","accessToken","getAccessToken","client","userInfo","err","profile","userProfile","Promise","resolve","reject","parseHash","authResult","setSession","expiresIn","Date","getTime","localStorage","setItem","JSON","stringify","String","removeItem","returnTo","checkSession","parse","getItem","auth"],"mappings":"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","sourcesContent":["import auth0, {\n  Auth0DecodedHash,\n  Auth0UserProfile,\n} from 'auth0-js';\n\n// import Parse from 'parse';\nimport history from '../history';\n\nexport class Auth {\n\n  auth0 = new auth0.WebAuth({\n    domain: 'bhp.eu.auth0.com',\n    clientID: 'kNgXEPRYCGsdlTlrZnPZGtK7GeDRgnbu',\n    redirectUri: `${document.location!.origin}/callback`,\n    audience: 'https://bhp.eu.auth0.com/userinfo',\n    responseType: 'token id_token',\n    scope: 'openid email'\n  })\n\n  authFlag: string = '';\n  idToken: string | undefined = '';\n  expiresAt = 0;\n\n  constructor() {\n    this.authFlag = 'isLoggedIn';\n    this.login = this.login.bind(this);\n    this.logout = this.logout.bind(this);\n    this.handleAuthentication = this.handleAuthentication.bind(this);\n    this.isAuthenticated = this.isAuthenticated.bind(this);\n  }\n\n  login() {\n    this.auth0.authorize();\n  }\n\n  getIdToken() {\n    return this.idToken;\n  }\n\n  getProfile(cb: Function) {\n    let accessToken = this.getAccessToken();\n    this.auth0.client.userInfo(accessToken, (err, profile) => {\n      if (profile) {\n        this.userProfile = profile;\n      }\n      cb(err, profile);\n    });\n  }\n\n  handleAuthentication() {\n    return new Promise((resolve, reject) => {\n      this.auth0.parseHash((err, authResult) => {\n        if (err) return reject(err);\n        if (!authResult || !authResult.idToken) {\n          return reject(err);\n        }\n        this.setSession(authResult);\n        resolve();\n      });\n    })\n  }\n\n  setSession(authResult: Auth0DecodedHash) {\n    this.idToken = authResult.idToken;\n    // set the time that the id token will expire at\n    this.expiresAt = authResult.expiresIn\n      ? authResult.expiresIn * 1000 + new Date().getTime()\n      : 0;\n    localStorage.setItem(this.authFlag, JSON.stringify(true));\n    localStorage.setItem('access_token', String(authResult.accessToken));\n  }\n\n  logout() {\n    localStorage.setItem(this.authFlag, JSON.stringify(false));\n    localStorage.removeItem('access_token');\n    this.auth0.logout({\n      returnTo: 'http://localhost:3000',\n      clientID: 'D1lahFIpV82Mum7TimXgG0WPxpP8suGo',\n    });\n  }\n\n  silentAuth() {\n    if (this.isAuthenticated()) {\n      return new Promise((resolve, reject) => {\n        this.auth0.checkSession({}, (err, authResult) => {\n          if (err) {\n            localStorage.removeItem(this.authFlag);\n            return reject(err);\n          }\n          this.setSession(authResult);\n          resolve();\n        });\n      });\n    }\n  }\n\n  isAuthenticated() {\n    // Check whether the current time is past the token's expiry time\n    //return new Date().getTime() < this.expiresAt;\n    return JSON.parse(String(localStorage.getItem(this.authFlag)));\n  }\n}\n\nconst auth = new Auth();\n\nexport default auth;"]},"metadata":{},"sourceType":"module"}