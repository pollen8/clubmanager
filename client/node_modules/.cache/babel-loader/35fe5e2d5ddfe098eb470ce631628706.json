{"ast":null,"code":"import _objectSpread from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/home/rob/personal/cra-test/src/Members/components/Filter.tsx\";\nimport React from 'react';\nimport Select from 'react-select';\nimport { FormGroup, Input, Label } from '../../app/components/Layout'; // import { seasonState } from '../../Season/seasonState';\n\nvar memberOptions = [{\n  value: '',\n  label: 'any'\n}, {\n  value: 'member',\n  label: 'member'\n}, {\n  value: 'guest',\n  label: 'guest'\n}];\nexport var Filter = function Filter(_ref) {\n  var setSearch = _ref.setSearch,\n      search = _ref.search;\n  // const { seasons } = seasonState();\n  var seasons = [];\n  var seasonOptions = seasons.map(function (season) {\n    return {\n      value: season,\n      label: season.startDate.toLocaleDateString() + ' - ' + season.endDate.toLocaleDateString()\n    };\n  });\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Filter\"), React.createElement(Input, {\n    onChange: function onChange(e) {\n      return setSearch(_objectSpread({}, search, {\n        name: e.target.value\n      }));\n    },\n    placeholder: \"...search\",\n    name: \"search\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Season\"), React.createElement(Select, {\n    value: seasonOptions.find(function (option) {\n      return option.value.id === search.season;\n    }),\n    options: seasonOptions,\n    onChange: function onChange(v) {\n      setSearch(_objectSpread({}, search, {\n        season: v.value || ''\n      }));\n    },\n    id: \"search-season\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  })), React.createElement(FormGroup, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }, React.createElement(Label, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63\n    },\n    __self: this\n  }, \"membership\"), React.createElement(Select, {\n    value: memberOptions.find(function (option) {\n      return option.value === search.membership;\n    }),\n    options: memberOptions,\n    onChange: function onChange(v) {\n      setSearch(_objectSpread({}, search, {\n        membership: v.value || ''\n      }));\n    },\n    id: \"search-is-member\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64\n    },\n    __self: this\n  })));\n};","map":{"version":3,"sources":["/home/rob/personal/cra-test/src/Members/components/Filter.tsx"],"names":["React","Select","FormGroup","Input","Label","memberOptions","value","label","Filter","setSearch","search","seasons","seasonOptions","map","season","startDate","toLocaleDateString","endDate","e","name","target","find","option","id","v","membership"],"mappings":"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","sourcesContent":["import React, { FC } from 'react';\nimport Select from 'react-select';\n\nimport {\n  FormGroup,\n  Input,\n  Label,\n} from '../../app/components/Layout';\n// import { seasonState } from '../../Season/seasonState';\nimport { IMembershipType } from '../memberState';\n\nconst memberOptions: Array<{ value: IMembershipType, label: string }> = [\n  { value: '', label: 'any' },\n  { value: 'member', label: 'member' },\n  { value: 'guest', label: 'guest' },\n];\n\n\nexport interface ISearch {\n  name: string;\n  membership: IMembershipType;\n  season: any;\n}\n\nexport interface IProps {\n  setSearch: (search: ISearch) => void\n  search: ISearch;\n}\n\nexport const Filter: FC<IProps> = ({ setSearch, search }) => {\n  // const { seasons } = seasonState();\n  const seasons: any[] = [];\n  const seasonOptions = seasons.map((season) => ({\n    value: season,\n    label: season.startDate.toLocaleDateString() + ' - ' + season.endDate.toLocaleDateString(),\n  }))\n  return (\n    <div>\n      <FormGroup>\n        <Label>Filter</Label>\n        <Input\n          onChange={(e) => setSearch({\n            ...search,\n            name: e.target.value\n          })}\n          placeholder=\"...search\"\n          name=\"search\" />\n      </FormGroup>\n      <FormGroup>\n        <Label>Season</Label>\n        <Select\n          value={seasonOptions.find((option) => option.value.id === search.season)}\n          options={seasonOptions}\n          onChange={(v: any) => {\n            setSearch({\n              ...search,\n              season: v.value || '',\n            });\n          }}\n          id=\"search-season\" />\n      </FormGroup>\n      <FormGroup>\n        <Label>membership</Label>\n        <Select\n          value={memberOptions.find((option) => option.value === search.membership)}\n          options={memberOptions}\n          onChange={(v: any) => {\n            setSearch({\n              ...search,\n              membership: v.value || '',\n            });\n          }}\n          id=\"search-is-member\" />\n      </FormGroup>\n    </div>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}