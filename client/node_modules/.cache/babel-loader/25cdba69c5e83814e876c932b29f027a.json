{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// // import Parse from 'parse';\n// import {\n//   useEffect,\n//   useState,\n// } from 'react';\n\nexport interface ISeason {\n  id: string;\n  createdAt?: Date,\n  updatedAt?: Date,\n  startDate: Date,\n  endDate: Date,\n  visitorFee: Number | String;\n}\n\n// const SeasonConnection = Parse.Object.extend('Season');\n// const query = new Parse.Query(SeasonConnection);\n\n// export const seasonState = () => {\n//   const [seasons, setSeasons] = useState<ISeason[]>([]);\n\n\n//   useEffect(() => {\n//     (async () => {\n//       const query = new Parse.Query('Season')\n//       const res = await query.find();\n//       const ses = res.map((r) => ({\n//         createdAt: r.createdAt,\n//         startDate: r.get('startDate'),\n//         endDate: r.get('endDate'),\n//         visitorFee: r.get('visitorFee'),\n//         id: r.id,\n//         updatedAt: r.updatedAt,\n//       }));\n//       setSeasons(ses);\n//     })()\n//   }, []);\n\n//   return {\n//     seasons,\n//     addSeason: async (season: ISeason) => {\n//       try {\n//         season.visitorFee = parseFloat(String(season.visitorFee));\n//         const seasonConnection = new SeasonConnection();\n//         const newSeason = await seasonConnection.save(season);\n//         season.id = newSeason.id;\n//         setSeasons([...seasons, season]);\n//       } catch (error) {\n//         alert('Failed to create new object, with error code: ' + error.message);\n//       }\n//     },\n//     deleteSeason: async (id: string) => {\n//       try {\n//         const season = await query.get(id);\n//         season.destroy();\n//         const newSeasons = seasons\n//           .filter((season) => season.id !== id);\n//         setSeasons(newSeasons);\n//       } catch (error) {\n//         alert('Failed to delete: ' + error.message);\n//       }\n//     },\n//     editSeason: async (season: ISeason) => {\n//       try {\n//         season.visitorFee = parseFloat(String(season.visitorFee));\n//         const seasonConnection = new SeasonConnection();\n//         await seasonConnection.save(season);\n//         const newSeasons = seasons.map((s) => {\n//           if (s.id === season.id) {\n//             return season;\n//           }\n//           return s;\n//         })\n//         setSeasons(newSeasons);\n//       } catch (error) {\n//         alert('Failed to create new object, with error code: ' + error.message);\n//       }\n\n//     },\n//   };\n// };"]},"metadata":{},"sourceType":"module"}