{"ast":null,"code":"import _slicedToArray from \"/home/rob/personal/clubmanager/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/home/rob/personal/clubmanager/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nvar _jsxFileName = \"/home/rob/personal/clubmanager/client/src/Season/Season.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n{\\n  filterSeasons(searchString: \\\"\\\") {\\n    id,\\n    startDate,\\n    endDate,\\n    visitorFee,\\n  }\\n}\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport gql from 'graphql-tag';\nimport React, { useState } from 'react';\nimport { Query } from 'react-apollo';\nimport { useQuery } from 'react-apollo-hooks';\nimport { IoIosAddCircle } from 'react-icons/io';\nimport { useMedia } from 'use-media';\nimport { Grid } from '../app/components/Grid';\nimport { Button, Card, CardBody, Col, Content, Name, Row, sizes, SubHeading } from '../app/components/Layout';\nimport { SlidePanel } from '../app/components/SlidePanel'; // import { DeleteConfirmation } from '../Members/components/DeleteConfirmation';\n\nimport { SeasonForm } from './components/SeasonForm';\nexport var FILTER_SEASONS = gql(_templateObject());\nexport var Season = function Season() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      visible = _useState2[0],\n      showForm = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selected = _useState4[0],\n      setSelected = _useState4[1];\n\n  var isWide = useMedia(\"(min-width: \".concat(sizes.desktop, \"px)\"));\n\n  var _useQuery = useQuery(FILTER_SEASONS),\n      data = _useQuery.data,\n      error = _useQuery.error,\n      loading = _useQuery.loading;\n\n  if (loading) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, \"Loading...\");\n  if (error || data === undefined) return React.createElement(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, \"Error :(\");\n  var cards = data.filterSeasons.map(function (season, index) {\n    return {\n      component: React.createElement(Card, {\n        style: {\n          display: 'flex',\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55\n        },\n        __self: this\n      }, React.createElement(Col, {\n        flexGrow: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, React.createElement(Name, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57\n        },\n        __self: this\n      }, new Date(season.startDate).toLocaleDateString(), \" -\", new Date(season.endDate).toLocaleDateString()), React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"\\xA3\", season.visitorFee), \" visitor fee\", React.createElement(Button, {\n        size: \"sm\",\n        onClick: function onClick() {\n          setSelected(season);\n          showForm(true);\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Edit\"))))),\n      id: season.id,\n      index: index\n    };\n  });\n  return React.createElement(Query, {\n    query: FILTER_SEASONS,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82\n    },\n    __self: this\n  }, function (_ref) {\n    var loading = _ref.loading,\n        error = _ref.error,\n        data = _ref.data;\n    console.log('data', data);\n    return React.createElement(Content, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 90\n      },\n      __self: this\n    }, React.createElement(Col, {\n      flexGrow: 2,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, React.createElement(SubHeading, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }, \"Seasons\")), React.createElement(Col, {\n      flexGrow: 0,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94\n      },\n      __self: this\n    }, React.createElement(Button, {\n      size: \"sm\",\n      color: \"grey500\",\n      onClick: function onClick() {\n        return showForm(!visible);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(IoIosAddCircle, {\n      size: \"1rem\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }), \"Add\"))), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103\n      },\n      __self: this\n    }, React.createElement(Col, {\n      md: 12,\n      style: {\n        marginRight: '13rem'\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, React.createElement(Grid, {\n      data: cards,\n      height: isWide ? 190 : 160,\n      columns: isWide ? 3 : 1,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    })), React.createElement(SlidePanel, {\n      visible: visible,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111\n      },\n      __self: this\n    }, React.createElement(SeasonForm // addSeason={addSeason}\n    // editSeason={editSeason}\n    , {\n      initialData: selected,\n      setSelected: setSelected,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }))));\n  });\n};","map":{"version":3,"sources":["/home/rob/personal/clubmanager/client/src/Season/Season.tsx"],"names":["gql","React","useState","Query","useQuery","IoIosAddCircle","useMedia","Grid","Button","Card","CardBody","Col","Content","Name","Row","sizes","SubHeading","SlidePanel","SeasonForm","FILTER_SEASONS","Season","visible","showForm","selected","setSelected","isWide","desktop","data","error","loading","undefined","cards","filterSeasons","map","season","index","component","display","position","Date","startDate","toLocaleDateString","endDate","visitorFee","id","console","log","marginRight"],"mappings":"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","sourcesContent":["import gql from 'graphql-tag';\nimport React, {\n  FC,\n  useState,\n} from 'react';\nimport { Query } from 'react-apollo';\nimport { useQuery } from 'react-apollo-hooks';\nimport { IoIosAddCircle } from 'react-icons/io';\nimport { useMedia } from 'use-media';\n\nimport { Grid } from '../app/components/Grid';\nimport {\n  Button,\n  Card,\n  CardBody,\n  Col,\n  Content,\n  Name,\n  Row,\n  sizes,\n  SubHeading,\n} from '../app/components/Layout';\nimport { SlidePanel } from '../app/components/SlidePanel';\n// import { DeleteConfirmation } from '../Members/components/DeleteConfirmation';\nimport { SeasonForm } from './components/SeasonForm';\nimport { ISeason } from './seasonState';\n\nexport interface ISearch {\n  name: string;\n}\n\nexport const FILTER_SEASONS = gql`\n{\n  filterSeasons(searchString: \"\") {\n    id,\n    startDate,\n    endDate,\n    visitorFee,\n  }\n}`;\n\nexport const Season: FC<{}> = () => {\n  const [visible, showForm] = useState(false);\n  const [selected, setSelected] = useState<ISeason | null>(null);\n  const isWide = useMedia(`(min-width: ${sizes.desktop}px)`);\n  const { data, error, loading } = useQuery(FILTER_SEASONS);\n  if (loading) return <p>Loading...</p>;\n  if (error || data === undefined) return <p>Error :(</p>;\n  const cards = data.filterSeasons\n    .map((season: any, index: number) => ({\n\n      component: (\n        <Card style={{ display: 'flex', position: 'relative' }}>\n          <CardBody>\n            <Row>\n              <Col flexGrow={1}>\n                <Name>\n                  {new Date(season.startDate).toLocaleDateString()} -\n                  {new Date(season.endDate).toLocaleDateString()}\n\n                </Name>\n                <strong>&pound;{season.visitorFee}</strong> visitor fee\n                {/* <DeleteConfirmation onDelete={() => deleteSeason(season.id)} /> */}\n                <Button\n                  size=\"sm\"\n                  onClick={() => {\n                    setSelected(season);\n                    showForm(true);\n                  }}>\n                  Edit\n                </Button>\n              </Col>\n            </Row>\n          </CardBody>\n        </Card>\n\n      ),\n      id: season.id,\n      index,\n    }))\n  return (\n    <Query\n      query={FILTER_SEASONS}>\n      {({ loading, error, data }) => {\n\n        console.log('data', data);\n\n        return (\n          <Content>\n            <Row>\n              <Col flexGrow={2}>\n                <SubHeading>Seasons</SubHeading>\n              </Col>\n              <Col flexGrow={0}>\n                <Button size=\"sm\"\n                  color=\"grey500\"\n                  onClick={() => showForm(!visible)}>\n                  <IoIosAddCircle size=\"1rem\" />\n                  Add\n              </Button>\n              </Col>\n            </Row>\n            <Row>\n\n              <Col md={12} style={{ marginRight: '13rem' }}>\n                <Grid\n                  data={cards}\n                  height={isWide ? 190 : 160}\n                  columns={isWide ? 3 : 1} />\n              </Col>\n              <SlidePanel visible={visible}>\n                <SeasonForm\n                  // addSeason={addSeason}\n                  // editSeason={editSeason}\n                  initialData={selected}\n                  setSelected={setSelected}\n                />\n              </SlidePanel>\n\n            </Row>\n          </Content>\n        );\n      }}\n    </Query>\n  );\n\n\n}"]},"metadata":{},"sourceType":"module"}