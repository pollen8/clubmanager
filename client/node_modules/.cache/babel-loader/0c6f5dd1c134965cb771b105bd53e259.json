{"ast":null,"code":"import _slicedToArray from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/rob/personal/cra-test/src/User/User.tsx\";\nimport React, { useState } from 'react';\nimport { useMedia } from 'use-media';\nimport { Grid } from '../app/components/Grid';\nimport { Card, CardBody, Col, Content, FormGroup, Label, Name, Row, sizes, SubHeading } from '../app/components/Layout';\nimport { Filter } from './components/Filter'; // import { userState } from './userState';\n\nexport var User = function User() {\n  // const { users, usersRoles, updateRole, isCurrentUser } = userState();\n  var users = [];\n  var usersRoles = [];\n  var isWide = useMedia(\"(min-width: \".concat(sizes.desktop, \"px)\"));\n\n  var _useState = useState({\n    name: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var cards = users.filter(function (user) {\n    if (search.name === '') {\n      return true;\n    }\n\n    var regex = new RegExp(search.name, 'gi');\n    return String(user.getUsername()).search(regex) !== -1;\n  }).map(function (user, index) {\n    return {\n      component: React.createElement(Card, {\n        style: {\n          display: 'flex',\n          position: 'relative'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }, React.createElement(CardBody, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(Row, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(Col, {\n        flexGrow: 1,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, React.createElement(Name, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }, user.getUsername()), user.getEmail(), usersRoles.map(function (role) {\n        var id = 'role-' + user.id + '-' + role.name;\n        return React.createElement(FormGroup, {\n          key: role.name,\n          checked: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, React.createElement(Label, {\n          htmlFor: id,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, role.name));\n      }))))),\n      id: user.id,\n      index: index\n    };\n  });\n  return React.createElement(Content, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }, React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, React.createElement(Col, {\n    flexGrow: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }, React.createElement(SubHeading, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89\n    },\n    __self: this\n  }, \"User\"))), React.createElement(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92\n    },\n    __self: this\n  }, React.createElement(Col, {\n    size: 2,\n    md: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93\n    },\n    __self: this\n  }, React.createElement(Filter, {\n    search: search,\n    setSearch: setSearch,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94\n    },\n    __self: this\n  })), React.createElement(Col, {\n    md: 12,\n    style: {\n      marginRight: '13rem'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98\n    },\n    __self: this\n  }, React.createElement(Grid, {\n    data: cards,\n    height: isWide ? 190 : 160,\n    columns: isWide ? 3 : 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99\n    },\n    __self: this\n  }))));\n};","map":{"version":3,"sources":["/home/rob/personal/cra-test/src/User/User.tsx"],"names":["React","useState","useMedia","Grid","Card","CardBody","Col","Content","FormGroup","Label","Name","Row","sizes","SubHeading","Filter","User","users","usersRoles","isWide","desktop","name","search","setSearch","cards","filter","user","regex","RegExp","String","getUsername","map","index","component","display","position","getEmail","role","id","marginRight"],"mappings":"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","sourcesContent":["import React, {\n  FC,\n  useState,\n} from 'react';\nimport { useMedia } from 'use-media';\n\nimport { Grid } from '../app/components/Grid';\nimport {\n  Card,\n  CardBody,\n  Col,\n  Content,\n  FormGroup,\n  Input,\n  Label,\n  Name,\n  Row,\n  sizes,\n  SubHeading,\n} from '../app/components/Layout';\nimport { Filter } from './components/Filter';\n\n// import { userState } from './userState';\n\nexport interface ISearch {\n  name: string;\n}\n\nexport const User: FC<{}> = () => {\n  // const { users, usersRoles, updateRole, isCurrentUser } = userState();\n  const users: any[] = [];\n  const usersRoles: any[] = [];\n\n  const isWide = useMedia(`(min-width: ${sizes.desktop}px)`);\n  const [search, setSearch] = useState<ISearch>({\n    name: '',\n  });\n  const cards = users\n    .filter((user) => {\n      if (search.name === '') {\n        return true;\n      }\n      const regex = new RegExp(search.name, 'gi');\n      return String(user.getUsername()).search(regex) !== -1;\n    })\n    .map((user, index) => ({\n\n      component: (\n        <Card style={{ display: 'flex', position: 'relative' }}>\n          <CardBody>\n            <Row>\n              <Col flexGrow={1}>\n                <Name>\n                  {user.getUsername()}\n                </Name>\n                {user.getEmail()}\n                {\n                  usersRoles.map((role) => {\n                    const id = 'role-' + user.id + '-' + role.name;\n                    return <FormGroup\n                      key={role.name}\n                      checked>\n                      {/* \n                      <Input type=\"checkbox\"\n                        id={id}\n                        disabled={isCurrentUser(user.id) || user.id === 'r4JlfBfMqR'}\n                        checked={user.roles.map((r) => r.name).includes(role.name)}\n                        onChange={(e) => updateRole(user.id, role, e.target.checked)} /> */}\n                      <Label htmlFor={id}>\n                        {role.name}\n                      </Label>\n                    </FormGroup>\n                  })\n                }\n              </Col>\n            </Row>\n          </CardBody>\n        </Card>\n\n      ),\n      id: user.id,\n      index,\n    }))\n\n  return (\n    <Content>\n      <Row>\n        <Col flexGrow={2}>\n          <SubHeading>User</SubHeading>\n        </Col>\n      </Row>\n      <Row>\n        <Col size={2} md={12}>\n          <Filter\n            search={search}\n            setSearch={setSearch} />\n        </Col>\n        <Col md={12} style={{ marginRight: '13rem' }}>\n          <Grid\n            data={cards}\n            height={isWide ? 190 : 160}\n            columns={isWide ? 3 : 1} />\n        </Col>\n\n      </Row>\n    </Content>\n  );\n}"]},"metadata":{},"sourceType":"module"}