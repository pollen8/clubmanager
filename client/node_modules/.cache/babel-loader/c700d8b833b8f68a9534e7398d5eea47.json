{"ast":null,"code":"import _toConsumableArray from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"/home/rob/personal/cra-test/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport Parse from 'parse';\nimport { useEffect, useState } from 'react';\nvar MemberConnection = Parse.Object.extend('Member');\n\nvar sortByName = function sortByName(a, b) {\n  return a.name > b.name ? 1 : a.name < b.name ? -1 : 0;\n};\n\nexport var memberState = function memberState(search) {\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      members = _useState2[0],\n      setMembers = _useState2[1];\n\n  useEffect(function () {\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var query, results;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              query = new Parse.Query(MemberConnection);\n\n              if (search.name !== '') {\n                query.matches('name', new RegExp(search.name), 'i');\n              }\n\n              console.log('search.membership', search.membership);\n\n              if (search.membership !== '') {\n                query.contains('membership', search.membership);\n              }\n\n              if (search.season !== '') {\n                console.log('season', search.season.id);\n                query.equalTo('seasonPointer', {\n                  '__type': 'Pointer',\n                  'className': '_User',\n                  'objectId': search.season.id\n                }); // @ts-ignore\n                // query.containedBy('season', search.season);\n              }\n\n              query.include('season');\n              _context.next = 8;\n              return query.find();\n\n            case 8:\n              results = _context.sent;\n              setMembers(results.map(function (result) {\n                console.log('result', result, result.get('season'));\n                return {\n                  createdAt: result.createdAt,\n                  name: result.get('name'),\n                  membership: result.get('membership'),\n                  id: result.id,\n                  updatedAt: result.updatedAt,\n                  season: result.get('season').query().find()\n                };\n              }));\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this);\n    }))();\n  }, [search]);\n  return {\n    members: members,\n    addMember: function () {\n      var _addMember = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(member) {\n        var memberConnection, newMember;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                memberConnection = new MemberConnection();\n                _context2.next = 4;\n                return memberConnection.save(member);\n\n              case 4:\n                newMember = _context2.sent;\n                member.id = newMember.id;\n                setMembers([].concat(_toConsumableArray(members), [member]).sort(sortByName));\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                alert('Failed to create new object, with error code: ' + _context2.t0.message);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 9]]);\n      }));\n\n      function addMember(_x) {\n        return _addMember.apply(this, arguments);\n      }\n\n      return addMember;\n    }(),\n    deleteMember: function () {\n      var _deleteMember = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3(id) {\n        var query, member, newMembers;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                query = new Parse.Query(MemberConnection);\n                _context3.next = 4;\n                return query.get(id);\n\n              case 4:\n                member = _context3.sent;\n                member.destroy();\n                newMembers = members.filter(function (member) {\n                  return member.id !== id;\n                });\n                setMembers(newMembers);\n                _context3.next = 13;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](0);\n                alert('Failed to delete: ' + _context3.t0.message);\n\n              case 13:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 10]]);\n      }));\n\n      function deleteMember(_x2) {\n        return _deleteMember.apply(this, arguments);\n      }\n\n      return deleteMember;\n    }(),\n    editMember: function () {\n      var _editMember = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee4(member) {\n        var memberConnection, updated;\n        return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n          while (1) {\n            switch (_context4.prev = _context4.next) {\n              case 0:\n                _context4.prev = 0;\n                memberConnection = new MemberConnection();\n                _context4.next = 4;\n                return memberConnection.save(member);\n\n              case 4:\n                updated = _context4.sent;\n                // @TODO insert updated into members\n                setMembers(_toConsumableArray(members).sort(sortByName));\n                _context4.next = 11;\n                break;\n\n              case 8:\n                _context4.prev = 8;\n                _context4.t0 = _context4[\"catch\"](0);\n                alert('Failed to create new object, with error code: ' + _context4.t0.message);\n\n              case 11:\n              case \"end\":\n                return _context4.stop();\n            }\n          }\n        }, _callee4, this, [[0, 8]]);\n      }));\n\n      function editMember(_x3) {\n        return _editMember.apply(this, arguments);\n      }\n\n      return editMember;\n    }()\n  };\n};","map":{"version":3,"sources":["/home/rob/personal/cra-test/src/Members/memberState.ts"],"names":["Parse","useEffect","useState","MemberConnection","Object","extend","sortByName","a","b","name","memberState","search","members","setMembers","query","Query","matches","RegExp","console","log","membership","contains","season","id","equalTo","include","find","results","map","result","get","createdAt","updatedAt","addMember","member","memberConnection","save","newMember","sort","alert","message","deleteMember","destroy","newMembers","filter","editMember","updated"],"mappings":"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","sourcesContent":["import Parse from 'parse';\nimport {\n  useEffect,\n  useState,\n} from 'react';\n\nimport { ISearch } from './components/Filter';\n\nexport type IMembershipType = '' | 'member' | 'guest';\nexport interface IMember {\n  createdAt?: Date;\n  id: string;\n  name: string;\n  membership: IMembershipType;\n  updatedAt?: Date;\n  season: any;\n}\n\nconst MemberConnection = Parse.Object.extend('Member');\n\nconst sortByName = (a: IMember, b: IMember) => a.name > b.name\n  ? 1\n  : a.name < b.name\n    ? -1 : 0;\n\nexport const memberState = (search: ISearch) => {\n  const [members, setMembers] = useState<IMember[]>([]);\n\n  useEffect(() => {\n    (async () => {\n      const query = new Parse.Query(MemberConnection);\n      if (search.name !== '') {\n        query.matches('name', new RegExp(search.name), 'i');\n      }\n      console.log('search.membership', search.membership);\n      if (search.membership !== '') {\n        query.contains('membership', search.membership);\n      }\n      if (search.season !== '') {\n        console.log('season', search.season.id);\n        query.equalTo('seasonPointer', { '__type': 'Pointer', 'className': '_User', 'objectId': search.season.id });\n        // @ts-ignore\n        // query.containedBy('season', search.season);\n      }\n      query.include('season');\n      const results = await query.find();\n      setMembers(results.map((result: any): IMember => {\n        console.log('result', result, result.get('season'));\n        return {\n          createdAt: result.createdAt,\n          name: result.get('name'),\n          membership: result.get('membership'),\n          id: result.id,\n          updatedAt: result.updatedAt,\n          season: result.get('season').query().find(),\n        }\n      }));\n    })()\n  }, [search]);\n\n\n  return {\n    members,\n    addMember: async (member: IMember) => {\n      try {\n        const memberConnection = new MemberConnection();\n        const newMember = await memberConnection.save(member);\n        member.id = newMember.id;\n        setMembers([...members, member].sort(sortByName));\n      } catch (error) {\n        alert('Failed to create new object, with error code: ' + error.message);\n      }\n    },\n    deleteMember: async (id: string) => {\n      try {\n        const query = new Parse.Query(MemberConnection);\n        const member = await query.get(id);\n        member.destroy();\n        const newMembers = members\n          .filter((member) => member.id !== id);\n        setMembers(newMembers);\n      } catch (error) {\n        alert('Failed to delete: ' + error.message);\n      }\n    },\n    editMember: async (member: IMember) => {\n      try {\n        const memberConnection = new MemberConnection();\n        const updated = await memberConnection.save(member);\n        // @TODO insert updated into members\n        setMembers([...members].sort(sortByName));\n      } catch (error) {\n        alert('Failed to create new object, with error code: ' + error.message);\n      }\n\n    },\n  };\n};"]},"metadata":{},"sourceType":"module"}